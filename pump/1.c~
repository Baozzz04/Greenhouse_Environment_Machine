#define CE                      PORTD.2
#define CSN                     PORTD.7
#define SCK                     PORTD.3
#define MOSI                    PORTD.6
#define MISO                    PIND.4
#define IRQ                     PIND.5

#include <mega8.h>
#include <delay.h>
#include <string.h>
#include <stdlib.h>
#include <stdio.h>
#include <rf.c>
#include <dc.c>
int dem;
unsigned char p=1;
int dem=0;
int z = 0;
int dem2=0;
interrupt [TIM0_OVF] void timer0_ovf_isr(void)
{
TCNT0=0x00;    //32ms
/*
    if (p == 1)
    {
        bat();
        dem++;
    }         
    if (dem == 200)   //dem thoi gian 32x200=? s
    {
        dem = 0;
        tat();
         p = 0;
    }    
*/
    if(p == 1)          
    {           
        bat();
        PORTC.5=1;
        dem++;
    }     
    if (dem==31)
    {           
        PORTC.5=0;
        p=0;
        z=1;  
        dem2++;
    }          
    if (dem2 == 31)
    {
        z=1;
        if (z == 1)
        {    
            bat();
            PORTC.5=1;
            dem++;
        }
        if (dem==62)
        {   
            tat();   
            PORTC.5=0;
            z=0; 
            dem2++;
        }
        if (dem2==62)
        {
            z=0;
        }
    }
    
}

void main(void)
{

DDRB=(0<<DDB7) | (1<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (1<<DDB2) | (1<<DDB1) | (1<<DDB0);
PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);

DDRC=(0<<DDC6) | (1<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
PORTC=(0<<PORTC6) | (1<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);

DDRD=(1<<DDD7) | (1<<DDD6) | (0<<DDD5) | (0<<DDD4) | (1<<DDD3) | (1<<DDD2) | (0<<DDD1) | (0<<DDD0);
PORTD=(1<<PORTD7) | (1<<PORTD6) | (1<<PORTD5) | (1<<PORTD4) | (1<<PORTD3) | (1<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);

TCCR0=(1<<CS02) | (0<<CS01) | (1<<CS00);
TCNT0=0x00;

// Timer/Counter 1 initialization
// Clock source: System Clock
// Clock value: 125.000 kHz
// Mode: Fast PWM top=0x03FF
// OC1A output: Non-Inverted PWM
// OC1B output: Non-Inverted PWM
// Noise Canceler: Off
// Input Capture on Falling Edge
// Timer Period: 8.192 ms
// Output Pulse(s):
// OC1A Period: 8.192 ms Width: 0 us// OC1B Period: 8.192 ms Width: 0 us
// Timer1 Overflow Interrupt: Off
// Input Capture Interrupt: Off
// Compare A Match Interrupt: Off
// Compare B Match Interrupt: Off
TCCR1A=(1<<COM1A1) | (0<<COM1A0) | (1<<COM1B1) | (0<<COM1B0) | (1<<WGM11) | (1<<WGM10);
TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (1<<WGM12) | (0<<CS12) | (1<<CS11) | (1<<CS10);
TCNT1H=0x00;
TCNT1L=0x00;
ICR1H=0x00;
ICR1L=0x00;
OCR1AH=0x00;
OCR1AL=0x00;
OCR1BH=0x00;
OCR1BL=0x00;

// Timer(s)/Counter(s) Interrupt(s) initialization
TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (1<<TOIE0);

#asm("sei")
Address1 = 0xA1;

delay_ms(200);
Common_Config();
RX_Mode();
RX_Config();
delay_ms(200);
tat();

while (1) 
    {
        if (IRQ == 0) 
            {
                RX_Read();
                PORTC.5=~PORTC.5;
                if(station_receive.soil <2)
                    {
                      p=1;
                    }               
                delay_ms(10);  
                RX_Config();
            } 
    }

}
