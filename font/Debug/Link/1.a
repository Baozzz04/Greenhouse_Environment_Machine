;#define CE          PORTD.7
;#define CSN         PORTD.6
;#define SCK         PORTD.5
;#define MOSI        PORTD.4
;#define MISO        PIND.3
;#define IRQ         PIND.2
;//------------------------
;#define LED         PORTB.4
;#define button      PIND.0
;unsigned char P_Add=0xB1, Code_tay_cam1 = 0xA4, Code_tay_cam2, Code_tay_cam3, Code_tay_cam4;
;#include <io.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <stdio.h>
;#include <delay.h>
;#include <glcd.h>
;#include <glcd_types.h>
;#include "light_10.c"
;/****************************************************************************
;Image data created by the LCD Vision V1.05 font & image editor/converter
;(C) Copyright 2011-2013 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Graphic LCD controller: PCD8544 (Nokia 3310, 5110) 84x48
;Image width: 84 pixels
;Image height: 48 pixels
;Color depth: 1 bits/pixel
;Imported image file name: light_10
;
;Exported monochrome image data size:
;532 bytes for displays organized as horizontal rows of bytes
;508 bytes for displays organized as rows of vertical bytes.
;****************************************************************************/
;
;flash unsigned char light_10[]=
;{
;/* Image width: 84 pixels */
;0x54, 0x00,
;/* Image height: 48 pixels */
;0x30, 0x00,
;#ifndef _GLCD_DATA_BYTEY_
;/* Image data for monochrome displays organized
;   as horizontal rows of bytes */
;0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
;0xFF, 0xFF, 0x0F, 0x01, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x01, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x08, 0x01, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x19,
;0x8C, 0x67, 0xF6, 0xC3, 0xE7, 0x9B, 0x79, 0xF6,
;0x9B, 0x09, 0x19, 0xCC, 0x6C, 0xC6, 0xC0, 0x6C,
;0x98, 0xCD, 0xC6, 0x98, 0x09, 0x19, 0x6C, 0x60,
;0xC6, 0xC0, 0x6C, 0xB8, 0x0D, 0xC6, 0x90, 0x08,
;0x19, 0x6C, 0xE0, 0xC7, 0xC0, 0xEC, 0xBB, 0x3D,
;0xC6, 0xF0, 0x08, 0x19, 0x6C, 0x6E, 0xC6, 0xC0,
;0x6C, 0xD8, 0xF1, 0xC6, 0x60, 0x08, 0x19, 0x6C,
;0x6C, 0xC6, 0xC0, 0x6C, 0xD8, 0xC1, 0xC6, 0x60,
;0x08, 0x19, 0xCC, 0x6C, 0xC6, 0xC0, 0x6C, 0x98,
;0xCD, 0xC6, 0x60, 0x08, 0xF9, 0x8D, 0x67, 0xC6,
;0xC0, 0xE7, 0x9B, 0x79, 0xC6, 0x60, 0x08, 0x01,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x08, 0x01, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08,
;0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x08, 0x01, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x01, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x08, 0x01, 0x00, 0x00, 0x00,
;0xC6, 0x00, 0x00, 0x00, 0x40, 0x00, 0x08, 0x01,
;0x00, 0x00, 0x00, 0x6F, 0x00, 0x00, 0x00, 0x40,
;0x00, 0x08, 0x01, 0x00, 0x00, 0x00, 0x6F, 0x00,
;0x00, 0x80, 0x00, 0x00, 0x08, 0x01, 0x00, 0x00,
;0x00, 0x36, 0x00, 0x00, 0x00, 0xF9, 0x41, 0x08,
;0x01, 0x00, 0x00, 0x00, 0xD8, 0x00, 0x00, 0x00,
;0xFE, 0x27, 0x08, 0x01, 0x60, 0xC0, 0x0F, 0xEC,
;0x01, 0x00, 0x00, 0xFF, 0x0F, 0x08, 0x01, 0x70,
;0xE0, 0x1F, 0xEC, 0x01, 0x00, 0x80, 0xFF, 0x1F,
;0x08, 0x01, 0x7C, 0xE0, 0x1C, 0xC6, 0x00, 0x00,
;0x80, 0xFF, 0x1F, 0x08, 0x01, 0x7E, 0x70, 0x38,
;0x00, 0x00, 0x00, 0xC0, 0xFF, 0x3F, 0x08, 0x01,
;0x76, 0x70, 0x38, 0x00, 0x00, 0x00, 0x00, 0xFF,
;0x3F, 0x08, 0x01, 0x70, 0x70, 0x38, 0x00, 0x00,
;0x00, 0x00, 0xFC, 0x3F, 0x08, 0x01, 0x70, 0x70,
;0x38, 0x00, 0x00, 0x70, 0xC0, 0xF3, 0x3F, 0x08,
;0x01, 0x70, 0x70, 0x38, 0x00, 0x00, 0xFC, 0x20,
;0xE4, 0x1F, 0x08, 0x01, 0x70, 0x70, 0x38, 0x00,
;0x00, 0xDE, 0x11, 0xC8, 0x1F, 0x08, 0x01, 0x70,
;0x70, 0x38, 0x00, 0x00, 0x83, 0x0B, 0x80, 0x4F,
;0x08, 0x01, 0x70, 0x70, 0x38, 0x00, 0x80, 0x07,
;0x07, 0x00, 0x87, 0x08, 0x01, 0x70, 0xE0, 0x1C,
;0x00, 0xC0, 0x0F, 0x0E, 0x00, 0x00, 0x08, 0x01,
;0x70, 0xE0, 0x1F, 0x00, 0xE0, 0x0C, 0x1C, 0xF0,
;0x00, 0x08, 0x01, 0x70, 0xC0, 0x0F, 0x00, 0xE0,
;0x00, 0x38, 0x08, 0x01, 0x08, 0x01, 0x00, 0x00,
;0x00, 0x00, 0xE0, 0x00, 0x30, 0x00, 0x02, 0x08,
;0x01, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x01, 0x00,
;0x00, 0x02, 0x08, 0x01, 0x00, 0x00, 0x00, 0x00,
;0xC0, 0x03, 0x00, 0x00, 0x02, 0x08, 0x01, 0x00,
;0x00, 0x00, 0x00, 0x80, 0x0F, 0x00, 0x00, 0x01,
;0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF,
;0xFF, 0xFF, 0x00, 0x08, 0x01, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x01,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x08, 0xFF, 0xFF, 0xFF,
;0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F,
;#else
;/* Image data for monochrome displays organized
;   as rows of vertical bytes */
;0xFF, 0x01, 0x01, 0xE1, 0xE1, 0x01, 0x01, 0x01,
;0x01, 0x01, 0xE1, 0xE1, 0x01, 0x81, 0xC1, 0x61,
;0x21, 0x21, 0x61, 0x41, 0x01, 0xE1, 0xE1, 0x01,
;0x01, 0xE1, 0xE1, 0x01, 0x21, 0x21, 0xE1, 0xE1,
;0x21, 0x21, 0x01, 0x01, 0x01, 0x01, 0xE1, 0xE1,
;0x21, 0x21, 0xE1, 0xC1, 0x01, 0xE1, 0xE1, 0x21,
;0x21, 0x21, 0x01, 0xE1, 0xE1, 0x81, 0x01, 0xE1,
;0xE1, 0x01, 0xC1, 0xE1, 0x21, 0x21, 0x61, 0x41,
;0x01, 0xE1, 0xE1, 0x01, 0x21, 0x21, 0xE1, 0xE1,
;0x21, 0x21, 0x01, 0x61, 0xE1, 0x01, 0x01, 0xE1,
;0x61, 0x01, 0x01, 0xFF, 0xFF, 0x00, 0x00, 0x1F,
;0x1F, 0x10, 0x10, 0x10, 0x10, 0x00, 0x1F, 0x1F,
;0x00, 0x07, 0x0F, 0x18, 0x10, 0x12, 0x1E, 0x0E,
;0x00, 0x1F, 0x1F, 0x01, 0x01, 0x1F, 0x1F, 0x00,
;0x00, 0x00, 0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x1F, 0x1F, 0x10, 0x10, 0x1F, 0x0F,
;0x00, 0x1F, 0x1F, 0x11, 0x11, 0x11, 0x00, 0x1F,
;0x1F, 0x01, 0x06, 0x1F, 0x1F, 0x00, 0x09, 0x19,
;0x13, 0x13, 0x1E, 0x0E, 0x00, 0x1F, 0x1F, 0x00,
;0x00, 0x00, 0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00,
;0x01, 0x1F, 0x1F, 0x01, 0x00, 0x00, 0x00, 0xFF,
;0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x60, 0xF0, 0xF0, 0x60, 0x80, 0xE0, 0x70, 0x10,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40,
;0x80, 0x00, 0x00, 0x80, 0x80, 0x80, 0xB0, 0x80,
;0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00,
;0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x38, 0x18,
;0xFC, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00,
;0xF0, 0xFC, 0xFE, 0x0E, 0x06, 0x06, 0x0E, 0xFE,
;0xFC, 0xF0, 0x00, 0x00, 0x00, 0x08, 0x0E, 0x07,
;0x01, 0x06, 0x0F, 0x0F, 0x06, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x90, 0x9C, 0xBE, 0xBF, 0x7F, 0x7F,
;0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE,
;0xFC, 0xF1, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF,
;0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x7F, 0x7F, 0x7F, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x0F, 0x3F, 0x7F, 0x70,
;0x60, 0x60, 0x70, 0x7F, 0x3F, 0x0F, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xF0, 0xF8,
;0x1C, 0x1E, 0x3B, 0x33, 0x03, 0x01, 0x03, 0x07,
;0x0E, 0x1C, 0x38, 0x74, 0xE2, 0xC1, 0x00, 0x00,
;0x00, 0x00, 0x01, 0x42, 0x20, 0x21, 0x23, 0x27,
;0x4F, 0x8F, 0x0F, 0x07, 0x03, 0x00, 0x04, 0x08,
;0x00, 0x00, 0x00, 0xFF, 0xFF, 0x80, 0x80, 0x80,
;0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
;0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
;0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
;0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
;0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
;0x80, 0x81, 0x83, 0x87, 0x8F, 0x8E, 0x8C, 0x8C,
;0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88,
;0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88,
;0x88, 0x88, 0x88, 0x88, 0x84, 0x83, 0x80, 0x80,
;0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xFF,
;#endif
;};
;
;#include "light_50.c"
;/****************************************************************************
;Image data created by the LCD Vision V1.05 font & image editor/converter
;(C) Copyright 2011-2013 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Graphic LCD controller: PCD8544 (Nokia 3310, 5110) 84x48
;Image width: 84 pixels
;Image height: 48 pixels
;Color depth: 1 bits/pixel
;Imported image file name: light_10
;
;Exported monochrome image data size:
;532 bytes for displays organized as horizontal rows of bytes
;508 bytes for displays organized as rows of vertical bytes.
;****************************************************************************/
;
;flash unsigned char light_50[]=
;{
;/* Image width: 84 pixels */
;0x54, 0x00,
;/* Image height: 48 pixels */
;0x30, 0x00,
;#ifndef _GLCD_DATA_BYTEY_
;/* Image data for monochrome displays organized
;   as horizontal rows of bytes */
;0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
;0xFF, 0xFF, 0x0F, 0x01, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x01, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x08, 0x01, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x19,
;0x8C, 0x67, 0xF6, 0xC3, 0xE7, 0x9B, 0x79, 0xF6,
;0x9B, 0x09, 0x19, 0xCC, 0x6C, 0xC6, 0xC0, 0x6C,
;0x98, 0xCD, 0xC6, 0x98, 0x09, 0x19, 0x6C, 0x60,
;0xC6, 0xC0, 0x6C, 0xB8, 0x0D, 0xC6, 0x90, 0x08,
;0x19, 0x6C, 0xE0, 0xC7, 0xC0, 0xEC, 0xBB, 0x3D,
;0xC6, 0xF0, 0x08, 0x19, 0x6C, 0x6E, 0xC6, 0xC0,
;0x6C, 0xD8, 0xF1, 0xC6, 0x60, 0x08, 0x19, 0x6C,
;0x6C, 0xC6, 0xC0, 0x6C, 0xD8, 0xC1, 0xC6, 0x60,
;0x08, 0x19, 0xCC, 0x6C, 0xC6, 0xC0, 0x6C, 0x98,
;0xCD, 0xC6, 0x60, 0x08, 0xF9, 0x8D, 0x67, 0xC6,
;0xC0, 0xE7, 0x9B, 0x79, 0xC6, 0x60, 0x08, 0x01,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x08, 0x01, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08,
;0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x08, 0x01, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x01, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x08, 0x01, 0x00, 0x00, 0x00,
;0xC6, 0x00, 0x00, 0x00, 0x40, 0x00, 0x08, 0x01,
;0x00, 0x00, 0x00, 0x6F, 0x00, 0x00, 0x00, 0x40,
;0x00, 0x08, 0x01, 0x00, 0x00, 0x00, 0x6F, 0x00,
;0x00, 0x80, 0x00, 0x00, 0x08, 0x01, 0x00, 0x00,
;0x00, 0x36, 0x00, 0x00, 0x00, 0xF9, 0x41, 0x08,
;0x01, 0x00, 0x00, 0x00, 0xD8, 0x00, 0x00, 0x00,
;0xFE, 0x27, 0x08, 0x01, 0xFF, 0xC1, 0x0F, 0xEC,
;0x01, 0x00, 0x00, 0xFF, 0x0F, 0x08, 0x01, 0xFF,
;0xE1, 0x1F, 0xEC, 0x01, 0x00, 0x80, 0xFF, 0x1F,
;0x08, 0x01, 0x07, 0xE0, 0x1C, 0xC6, 0x00, 0x00,
;0x80, 0x9F, 0x1F, 0x08, 0x01, 0x07, 0x70, 0x38,
;0x00, 0x00, 0x00, 0xC0, 0x07, 0x3E, 0x08, 0x81,
;0x7F, 0x70, 0x38, 0x00, 0x00, 0x00, 0x00, 0x07,
;0x3E, 0x08, 0x81, 0xFF, 0x70, 0x38, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x3C, 0x08, 0x81, 0xE7, 0x71,
;0x38, 0x00, 0x00, 0x70, 0xC0, 0x03, 0x3C, 0x08,
;0x01, 0xC0, 0x71, 0x38, 0x00, 0x00, 0xFC, 0xE0,
;0x07, 0x1E, 0x08, 0x01, 0xC0, 0x71, 0x38, 0x00,
;0x00, 0xDE, 0x71, 0x0E, 0x1F, 0x08, 0x01, 0xC0,
;0x71, 0x38, 0x00, 0x00, 0x87, 0x3B, 0x8C, 0x4F,
;0x08, 0x81, 0xC3, 0x71, 0x38, 0x00, 0x80, 0x07,
;0x1F, 0x00, 0x87, 0x08, 0x81, 0xE7, 0xE0, 0x1C,
;0x00, 0xC0, 0x0F, 0x0E, 0x00, 0x00, 0x08, 0x01,
;0xFF, 0xE0, 0x1F, 0x00, 0xE0, 0x0C, 0x1C, 0xF0,
;0x00, 0x08, 0x01, 0x3E, 0xC0, 0x0F, 0x00, 0xE0,
;0x00, 0x38, 0xF8, 0x01, 0x08, 0x01, 0x00, 0x00,
;0x00, 0x00, 0xE0, 0x00, 0x30, 0x90, 0x03, 0x08,
;0x01, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x01, 0x00,
;0x00, 0x03, 0x08, 0x01, 0x00, 0x00, 0x00, 0x00,
;0xC0, 0x03, 0x00, 0x80, 0x03, 0x08, 0x01, 0x00,
;0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0xFF, 0x01,
;0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF,
;0xFF, 0xFF, 0x00, 0x08, 0x01, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x01,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x08, 0xFF, 0xFF, 0xFF,
;0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F,
;#else
;/* Image data for monochrome displays organized
;   as rows of vertical bytes */
;0xFF, 0x01, 0x01, 0xE1, 0xE1, 0x01, 0x01, 0x01,
;0x01, 0x01, 0xE1, 0xE1, 0x01, 0x81, 0xC1, 0x61,
;0x21, 0x21, 0x61, 0x41, 0x01, 0xE1, 0xE1, 0x01,
;0x01, 0xE1, 0xE1, 0x01, 0x21, 0x21, 0xE1, 0xE1,
;0x21, 0x21, 0x01, 0x01, 0x01, 0x01, 0xE1, 0xE1,
;0x21, 0x21, 0xE1, 0xC1, 0x01, 0xE1, 0xE1, 0x21,
;0x21, 0x21, 0x01, 0xE1, 0xE1, 0x81, 0x01, 0xE1,
;0xE1, 0x01, 0xC1, 0xE1, 0x21, 0x21, 0x61, 0x41,
;0x01, 0xE1, 0xE1, 0x01, 0x21, 0x21, 0xE1, 0xE1,
;0x21, 0x21, 0x01, 0x61, 0xE1, 0x01, 0x01, 0xE1,
;0x61, 0x01, 0x01, 0xFF, 0xFF, 0x00, 0x00, 0x1F,
;0x1F, 0x10, 0x10, 0x10, 0x10, 0x00, 0x1F, 0x1F,
;0x00, 0x07, 0x0F, 0x18, 0x10, 0x12, 0x1E, 0x0E,
;0x00, 0x1F, 0x1F, 0x01, 0x01, 0x1F, 0x1F, 0x00,
;0x00, 0x00, 0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x1F, 0x1F, 0x10, 0x10, 0x1F, 0x0F,
;0x00, 0x1F, 0x1F, 0x11, 0x11, 0x11, 0x00, 0x1F,
;0x1F, 0x01, 0x06, 0x1F, 0x1F, 0x00, 0x09, 0x19,
;0x13, 0x13, 0x1E, 0x0E, 0x00, 0x1F, 0x1F, 0x00,
;0x00, 0x00, 0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00,
;0x01, 0x1F, 0x1F, 0x01, 0x00, 0x00, 0x00, 0xFF,
;0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x60, 0xF0, 0xF0, 0x60, 0x80, 0xE0, 0x70, 0x10,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40,
;0x80, 0x00, 0x00, 0x80, 0x80, 0x80, 0xB0, 0x80,
;0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00,
;0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0xE0, 0xFE, 0xFE, 0xFE, 0x66,
;0x66, 0xE6, 0xE6, 0xC6, 0x86, 0x00, 0x00, 0x00,
;0xF0, 0xFC, 0xFE, 0x0E, 0x06, 0x06, 0x0E, 0xFE,
;0xFC, 0xF0, 0x00, 0x00, 0x00, 0x08, 0x0E, 0x07,
;0x01, 0x06, 0x0F, 0x0F, 0x06, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x90, 0x9C, 0xBE, 0xBF, 0x3F, 0x0F,
;0x0F, 0x07, 0x07, 0x0F, 0x0F, 0x3F, 0xFF, 0xFE,
;0xFC, 0xF1, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF,
;0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18,
;0x38, 0x78, 0x70, 0x60, 0x60, 0x70, 0x3F, 0x3F,
;0x0F, 0x00, 0x00, 0x00, 0x0F, 0x3F, 0x7F, 0x70,
;0x60, 0x60, 0x70, 0x7F, 0x3F, 0x0F, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xF0, 0xF8,
;0x1C, 0x1E, 0x3F, 0x33, 0x03, 0x01, 0x03, 0x07,
;0x0E, 0x1C, 0x38, 0x7C, 0xEE, 0xC7, 0x03, 0x01,
;0x01, 0x03, 0x07, 0x46, 0xE0, 0x60, 0x60, 0xE4,
;0xCE, 0x8F, 0x0F, 0x07, 0x03, 0x00, 0x04, 0x08,
;0x00, 0x00, 0x00, 0xFF, 0xFF, 0x80, 0x80, 0x80,
;0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
;0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
;0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
;0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
;0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
;0x80, 0x81, 0x83, 0x87, 0x8F, 0x8E, 0x8C, 0x8C,
;0x8C, 0x8C, 0x8C, 0x8C, 0x8C, 0x8C, 0x8C, 0x8C,
;0x8C, 0x8C, 0x8C, 0x8C, 0x8C, 0x8C, 0x8C, 0x8C,
;0x8C, 0x8C, 0x8C, 0x8E, 0x87, 0x83, 0x80, 0x80,
;0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xFF,
;#endif
;};
;
;#include "light_90.c"
;/****************************************************************************
;Image data created by the LCD Vision V1.05 font & image editor/converter
;(C) Copyright 2011-2013 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Graphic LCD controller: PCD8544 (Nokia 3310, 5110) 84x48
;Image width: 84 pixels
;Image height: 48 pixels
;Color depth: 1 bits/pixel
;Imported image file name: light_10
;
;Exported monochrome image data size:
;532 bytes for displays organized as horizontal rows of bytes
;508 bytes for displays organized as rows of vertical bytes.
;****************************************************************************/
;
;flash unsigned char light_90[]=
;{
;/* Image width: 84 pixels */
;0x54, 0x00,
;/* Image height: 48 pixels */
;0x30, 0x00,
;#ifndef _GLCD_DATA_BYTEY_
;/* Image data for monochrome displays organized
;   as horizontal rows of bytes */
;0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
;0xFF, 0xFF, 0x0F, 0x01, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x01, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x08, 0x01, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x19,
;0x8C, 0x67, 0xF6, 0xC3, 0xE7, 0x9B, 0x79, 0xF6,
;0x9B, 0x09, 0x19, 0xCC, 0x6C, 0xC6, 0xC0, 0x6C,
;0x98, 0xCD, 0xC6, 0x98, 0x09, 0x19, 0x6C, 0x60,
;0xC6, 0xC0, 0x6C, 0xB8, 0x0D, 0xC6, 0x90, 0x08,
;0x19, 0x6C, 0xE0, 0xC7, 0xC0, 0xEC, 0xBB, 0x3D,
;0xC6, 0xF0, 0x08, 0x19, 0x6C, 0x6E, 0xC6, 0xC0,
;0x6C, 0xD8, 0xF1, 0xC6, 0x60, 0x08, 0x19, 0x6C,
;0x6C, 0xC6, 0xC0, 0x6C, 0xD8, 0xC1, 0xC6, 0x60,
;0x08, 0x19, 0xCC, 0x6C, 0xC6, 0xC0, 0x6C, 0x98,
;0xCD, 0xC6, 0x60, 0x08, 0xF9, 0x8D, 0x67, 0xC6,
;0xC0, 0xE7, 0x9B, 0x79, 0xC6, 0x60, 0x08, 0x01,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x08, 0x01, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08,
;0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x08, 0x01, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x01, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00,
;0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x40, 0x00, 0x08, 0x01, 0x00, 0x00, 0x00,
;0xC6, 0x00, 0x00, 0x20, 0x40, 0x00, 0x08, 0x01,
;0x00, 0x00, 0x00, 0x6F, 0x00, 0x00, 0x40, 0x44,
;0x00, 0x09, 0x01, 0x00, 0x00, 0x00, 0x6F, 0x00,
;0x00, 0x80, 0x00, 0x84, 0x08, 0x01, 0x00, 0x00,
;0x00, 0x36, 0x00, 0x00, 0x00, 0xF9, 0x41, 0x08,
;0x01, 0x00, 0x00, 0x00, 0xD8, 0x00, 0x00, 0x00,
;0x06, 0x26, 0x08, 0x01, 0x3E, 0xC0, 0x0F, 0xEC,
;0x01, 0x00, 0x00, 0x01, 0x08, 0x08, 0x01, 0xFF,
;0xE0, 0x1F, 0xEC, 0x01, 0x00, 0x80, 0x00, 0x90,
;0x08, 0x81, 0xE7, 0xE0, 0x1C, 0xC6, 0x00, 0x00,
;0x80, 0x00, 0x00, 0x08, 0x81, 0xC3, 0x71, 0x38,
;0x00, 0x00, 0x00, 0x40, 0x00, 0x20, 0x08, 0x81,
;0xC3, 0x71, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00,
;0xA0, 0x0B, 0x81, 0xC3, 0x71, 0x38, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x20, 0x08, 0x81, 0xE7, 0x71,
;0x38, 0x00, 0x00, 0x70, 0xC0, 0x03, 0x20, 0x08,
;0x01, 0xFF, 0x71, 0x38, 0x00, 0x00, 0x8C, 0x20,
;0x04, 0x90, 0x08, 0x01, 0xFE, 0x71, 0x38, 0x00,
;0x00, 0x02, 0x11, 0x08, 0x10, 0x08, 0x01, 0xC0,
;0x71, 0x38, 0x00, 0x00, 0x01, 0x0A, 0x08, 0x48,
;0x08, 0x81, 0xC3, 0x71, 0x38, 0x00, 0x80, 0x01,
;0x04, 0x00, 0x84, 0x08, 0x81, 0xE7, 0xE0, 0x1C,
;0x00, 0x40, 0x02, 0x08, 0x00, 0x00, 0x09, 0x01,
;0x7F, 0xE0, 0x1F, 0x00, 0x20, 0x04, 0x10, 0xF0,
;0x00, 0x0A, 0x01, 0x3E, 0xC0, 0x0F, 0x00, 0x20,
;0x00, 0x10, 0x08, 0x01, 0x08, 0x01, 0x00, 0x00,
;0x00, 0x00, 0x20, 0x00, 0x20, 0x00, 0x02, 0x08,
;0x01, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00,
;0x00, 0x02, 0x08, 0x01, 0x00, 0x00, 0x00, 0x00,
;0x40, 0x00, 0x00, 0x00, 0x02, 0x08, 0x01, 0x00,
;0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x80, 0x01,
;0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF,
;0xFF, 0xFF, 0x00, 0x08, 0x01, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x01,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x08, 0xFF, 0xFF, 0xFF,
;0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F,
;#else
;/* Image data for monochrome displays organized
;   as rows of vertical bytes */
;0xFF, 0x01, 0x01, 0xE1, 0xE1, 0x01, 0x01, 0x01,
;0x01, 0x01, 0xE1, 0xE1, 0x01, 0x81, 0xC1, 0x61,
;0x21, 0x21, 0x61, 0x41, 0x01, 0xE1, 0xE1, 0x01,
;0x01, 0xE1, 0xE1, 0x01, 0x21, 0x21, 0xE1, 0xE1,
;0x21, 0x21, 0x01, 0x01, 0x01, 0x01, 0xE1, 0xE1,
;0x21, 0x21, 0xE1, 0xC1, 0x01, 0xE1, 0xE1, 0x21,
;0x21, 0x21, 0x01, 0xE1, 0xE1, 0x81, 0x01, 0xE1,
;0xE1, 0x01, 0xC1, 0xE1, 0x21, 0x21, 0x61, 0x41,
;0x01, 0xE1, 0xE1, 0x01, 0x21, 0x21, 0xE1, 0xE1,
;0x21, 0x21, 0x01, 0x61, 0xE1, 0x01, 0x01, 0xE1,
;0x61, 0x01, 0x01, 0xFF, 0xFF, 0x00, 0x00, 0x1F,
;0x1F, 0x10, 0x10, 0x10, 0x10, 0x00, 0x1F, 0x1F,
;0x00, 0x07, 0x0F, 0x18, 0x10, 0x12, 0x1E, 0x0E,
;0x00, 0x1F, 0x1F, 0x01, 0x01, 0x1F, 0x1F, 0x00,
;0x00, 0x00, 0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x1F, 0x1F, 0x10, 0x10, 0x1F, 0x0F,
;0x00, 0x1F, 0x1F, 0x11, 0x11, 0x11, 0x00, 0x1F,
;0x1F, 0x01, 0x06, 0x1F, 0x1F, 0x00, 0x09, 0x19,
;0x13, 0x13, 0x1E, 0x0E, 0x00, 0x1F, 0x1F, 0x00,
;0x00, 0x00, 0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00,
;0x01, 0x1F, 0x1F, 0x01, 0x00, 0x00, 0x00, 0xFF,
;0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x60, 0xF0, 0xF0, 0x60, 0x80, 0xE0, 0x70, 0x10,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x20, 0x40,
;0x80, 0x00, 0x20, 0x80, 0x80, 0x80, 0xBC, 0x80,
;0x80, 0x00, 0x40, 0x00, 0x00, 0x00, 0x80, 0x40,
;0x20, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0xF8, 0xFC, 0xFE, 0x8E, 0x06,
;0x06, 0x8E, 0xFC, 0xFC, 0xF0, 0x00, 0x00, 0x00,
;0xF0, 0xFC, 0xFE, 0x0E, 0x06, 0x06, 0x0E, 0xFE,
;0xFC, 0xF0, 0x00, 0x00, 0x00, 0x08, 0x0E, 0x07,
;0x01, 0x06, 0x0F, 0x0F, 0x06, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x90, 0x8C, 0x82, 0x81, 0x01, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x02,
;0x04, 0xF1, 0x00, 0x24, 0x20, 0x20, 0x00, 0xFF,
;0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18,
;0x39, 0x7B, 0x73, 0x63, 0x63, 0x73, 0x3F, 0x1F,
;0x0F, 0x00, 0x00, 0x00, 0x0F, 0x3F, 0x7F, 0x70,
;0x60, 0x60, 0x70, 0x7F, 0x3F, 0x0F, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x10, 0x08,
;0x0C, 0x12, 0x21, 0x01, 0x00, 0x00, 0x00, 0x01,
;0x02, 0x04, 0x08, 0x14, 0x62, 0x81, 0x00, 0x00,
;0x00, 0x00, 0x01, 0x46, 0x20, 0x20, 0x20, 0x20,
;0x40, 0x80, 0x08, 0x04, 0x03, 0x00, 0x04, 0x09,
;0x10, 0x20, 0x00, 0xFF, 0xFF, 0x80, 0x80, 0x80,
;0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
;0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
;0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
;0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
;0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
;0x80, 0x81, 0x82, 0x84, 0x88, 0x88, 0x88, 0x88,
;0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88,
;0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88,
;0x88, 0x88, 0x88, 0x8C, 0x84, 0x83, 0x80, 0x80,
;0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xFF,
;#endif
;};
;
;#include "general.c"
;/****************************************************************************
;Image data created by the LCD Vision V1.05 font & image editor/converter
;(C) Copyright 2011-2013 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Graphic LCD controller: PCD8544 (Nokia 3310, 5110) 84x48
;Image width: 84 pixels
;Image height: 48 pixels
;Color depth: 1 bits/pixel
;Imported image file name: general.bmp
;
;Exported monochrome image data size:
;532 bytes for displays organized as horizontal rows of bytes
;508 bytes for displays organized as rows of vertical bytes.
;****************************************************************************/
;
;flash unsigned char general[]=
;{
;/* Image width: 84 pixels */
;0x54, 0x00,
;/* Image height: 48 pixels */
;0x30, 0x00,
;#ifndef _GLCD_DATA_BYTEY_
;/* Image data for monochrome displays organized
;   as horizontal rows of bytes */
;0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
;0xFF, 0xFF, 0x0F, 0x01, 0x00, 0x00, 0x00, 0x00,
;0x04, 0x00, 0x00, 0x00, 0x00, 0x08, 0x01, 0x00,
;0x00, 0x10, 0x10, 0x04, 0x00, 0x00, 0x00, 0x40,
;0x08, 0x01, 0x00, 0x98, 0x20, 0x08, 0x04, 0x00,
;0x60, 0x02, 0x40, 0x08, 0x01, 0x00, 0x58, 0x20,
;0x08, 0x04, 0x00, 0x60, 0x01, 0x40, 0x08, 0x01,
;0x00, 0x20, 0x40, 0x04, 0x04, 0x00, 0x80, 0x00,
;0xE0, 0x08, 0xE1, 0xF1, 0xD0, 0x02, 0x80, 0x04,
;0x0F, 0x46, 0x03, 0xA0, 0x08, 0xF1, 0xFB, 0xC9,
;0x84, 0x43, 0x84, 0x1F, 0x27, 0x03, 0x10, 0x09,
;0x31, 0x9B, 0x01, 0x48, 0x24, 0x04, 0x98, 0x07,
;0x80, 0x10, 0x09, 0x31, 0x83, 0x01, 0x20, 0x08,
;0x04, 0xD8, 0x06, 0x80, 0x08, 0x0A, 0xF1, 0x83,
;0x01, 0x27, 0xC8, 0x05, 0x1F, 0x06, 0x80, 0x08,
;0x0A, 0xE1, 0xC1, 0x00, 0x20, 0x18, 0x04, 0x0F,
;0x06, 0xC0, 0x09, 0x0B, 0x31, 0x63, 0x00, 0x3C,
;0x78, 0x04, 0x18, 0x06, 0x40, 0x11, 0x09, 0x31,
;0x33, 0x00, 0x66, 0xC4, 0x04, 0x18, 0x06, 0x20,
;0x12, 0x09, 0xF1, 0xFB, 0x01, 0xE3, 0x83, 0x84,
;0x1F, 0x06, 0x20, 0xE2, 0x08, 0xE1, 0xF9, 0x01,
;0x01, 0x80, 0x04, 0x0F, 0x06, 0x10, 0x04, 0x08,
;0x01, 0x00, 0x00, 0x01, 0x80, 0x04, 0x00, 0x00,
;0x10, 0x06, 0x08, 0x01, 0x00, 0x00, 0x01, 0xC3,
;0x04, 0x00, 0x00, 0x10, 0x06, 0x08, 0x01, 0x00,
;0x00, 0xFE, 0x7F, 0x04, 0x00, 0x00, 0x20, 0x02,
;0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00,
;0x00, 0x20, 0x02, 0x08, 0x01, 0x00, 0x00, 0x00,
;0x00, 0x04, 0x00, 0x00, 0xC0, 0x01, 0x08, 0x01,
;0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
;0x00, 0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x04,
;0x00, 0x00, 0x00, 0x00, 0x08, 0xFF, 0xFF, 0xFF,
;0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F,
;0x01, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00,
;0x00, 0x00, 0x08, 0x01, 0x00, 0x00, 0x00, 0x00,
;0x04, 0x00, 0x00, 0x80, 0x00, 0x08, 0x01, 0x00,
;0x00, 0x00, 0x06, 0x04, 0x00, 0x00, 0x80, 0x00,
;0x08, 0x01, 0x00, 0x00, 0x00, 0x09, 0x04, 0x00,
;0x00, 0x80, 0x00, 0x08, 0x01, 0x00, 0x00, 0x00,
;0x09, 0x04, 0x00, 0x00, 0xC0, 0x01, 0x08, 0x01,
;0x00, 0x8C, 0x01, 0x09, 0x04, 0x00, 0x00, 0x40,
;0x01, 0x08, 0x01, 0x00, 0x52, 0x00, 0x09, 0x04,
;0x00, 0x00, 0x20, 0x02, 0x08, 0x81, 0x79, 0x52,
;0x00, 0x09, 0x04, 0x06, 0x00, 0x20, 0x02, 0x08,
;0xC1, 0xFD, 0x9C, 0x01, 0x09, 0x04, 0x06, 0x00,
;0x10, 0x04, 0x08, 0xE1, 0xCD, 0x00, 0x00, 0x09,
;0x04, 0x0E, 0x00, 0x10, 0x04, 0x08, 0xB1, 0x0D,
;0x00, 0x00, 0x09, 0x04, 0x0E, 0x00, 0x10, 0x04,
;0x08, 0x81, 0x7D, 0x00, 0x00, 0x09, 0x04, 0x0E,
;0x00, 0x20, 0x02, 0x08, 0x81, 0xFD, 0x00, 0x00,
;0x0F, 0x04, 0x0E, 0x00, 0x20, 0x02, 0x08, 0x81,
;0xCD, 0x00, 0x00, 0x0F, 0x04, 0x0E, 0x00, 0xC0,
;0x01, 0x08, 0x81, 0xCD, 0x00, 0x00, 0x0F, 0x04,
;0x0E, 0x00, 0x00, 0x00, 0x08, 0x81, 0xFD, 0x00,
;0x80, 0x1F, 0x04, 0x7E, 0x00, 0xFE, 0xFF, 0x08,
;0x81, 0x79, 0x00, 0xC0, 0x3F, 0x04, 0x7E, 0x00,
;0x21, 0x80, 0x08, 0x01, 0x00, 0x00, 0xC0, 0x3F,
;0x04, 0x00, 0x80, 0x04, 0x53, 0x08, 0x01, 0x00,
;0x00, 0xC0, 0x3F, 0x04, 0x00, 0x40, 0x69, 0x2B,
;0x08, 0x01, 0x00, 0x00, 0x80, 0x1F, 0x04, 0x00,
;0xA0, 0x0C, 0x11, 0x08, 0x01, 0x00, 0x00, 0x00,
;0x0F, 0x04, 0x00, 0xF0, 0xFF, 0x0F, 0x08, 0x01,
;0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
;0x00, 0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x04,
;0x00, 0x00, 0x00, 0x00, 0x08, 0xFF, 0xFF, 0xFF,
;0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F,
;#else
;/* Image data for monochrome displays organized
;   as rows of vertical bytes */
;0xFF, 0x01, 0x01, 0x01, 0x81, 0xC1, 0xC1, 0xC1,
;0xC1, 0x81, 0x01, 0x81, 0xC1, 0xC1, 0xC1, 0xC1,
;0x81, 0x01, 0x01, 0x99, 0x59, 0x21, 0xD1, 0xC9,
;0x01, 0x41, 0x81, 0x01, 0x05, 0x19, 0x21, 0x81,
;0x81, 0x81, 0x21, 0x19, 0x05, 0x01, 0x81, 0x41,
;0x01, 0x01, 0xFF, 0x01, 0x01, 0x01, 0x01, 0x81,
;0xC1, 0xC1, 0xC1, 0xC1, 0x81, 0x01, 0x01, 0x01,
;0x81, 0xC1, 0xC1, 0x01, 0x01, 0x99, 0x59, 0x21,
;0xD1, 0xC9, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
;0x01, 0x01, 0x01, 0x01, 0x81, 0x61, 0x3D, 0x61,
;0x81, 0x01, 0x01, 0xFF, 0xFF, 0x00, 0x00, 0x00,
;0x77, 0xFF, 0xCC, 0xCC, 0xFF, 0x77, 0x00, 0xC1,
;0xE1, 0xF0, 0xD8, 0xCF, 0xC7, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0xC4, 0x64, 0x34, 0x11,
;0x10, 0x7E, 0x61, 0x40, 0x40, 0x40, 0x21, 0x1E,
;0x18, 0x11, 0x34, 0xE4, 0x04, 0x00, 0xFF, 0x00,
;0x00, 0x00, 0x00, 0x40, 0xCC, 0xCC, 0xCC, 0xFF,
;0x77, 0x00, 0x02, 0x03, 0x01, 0xFF, 0xFF, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x80, 0x60, 0x18, 0x0F, 0x18, 0x60, 0x80, 0x0E,
;0x31, 0x40, 0x40, 0x40, 0x39, 0x0E, 0x00, 0xFF,
;0xFF, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
;0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
;0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
;0x83, 0x84, 0x84, 0x84, 0x84, 0x84, 0x84, 0x84,
;0x86, 0x86, 0x84, 0x84, 0x84, 0x84, 0x86, 0x83,
;0x80, 0x80, 0xFF, 0x80, 0x80, 0x80, 0x80, 0x80,
;0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
;0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
;0x80, 0x80, 0x80, 0x80, 0x83, 0x8C, 0x90, 0x90,
;0x90, 0x8F, 0x83, 0x80, 0x80, 0x80, 0x80, 0x80,
;0x80, 0x80, 0x80, 0xFF, 0xFF, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x80, 0x80, 0x00, 0x00, 0x80,
;0x80, 0x80, 0x80, 0x00, 0x00, 0xC0, 0x20, 0x20,
;0xC0, 0x00, 0xC0, 0x20, 0x20, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0xF8, 0x04, 0x04, 0xF8,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0xC0, 0x30, 0x1E, 0x30, 0xC0, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF,
;0xFF, 0x00, 0x00, 0x00, 0x04, 0x06, 0x03, 0xFF,
;0xFF, 0x00, 0xFF, 0xFF, 0x99, 0x99, 0xFB, 0xF3,
;0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00, 0x01,
;0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80,
;0xFF, 0xF0, 0xF0, 0xFF, 0x80, 0x00, 0x00, 0x00,
;0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0xFF, 0xFF, 0xFE, 0x80, 0x80, 0x80, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x80, 0x80, 0x80, 0x87, 0x98, 0xA0, 0xA0,
;0xA0, 0x98, 0x87, 0x80, 0x80, 0x80, 0x80, 0x80,
;0x00, 0x00, 0x00, 0xFF, 0xFF, 0x80, 0x80, 0x80,
;0x80, 0x80, 0x80, 0x81, 0x81, 0x80, 0x80, 0x81,
;0x81, 0x81, 0x81, 0x80, 0x80, 0x80, 0x80, 0x80,
;0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
;0x80, 0x80, 0x87, 0x8F, 0x9F, 0x9F, 0x9F, 0x9F,
;0x8F, 0x87, 0x80, 0x80, 0x80, 0x80, 0xFF, 0x80,
;0x80, 0x80, 0x80, 0x80, 0x80, 0x81, 0x81, 0x81,
;0x81, 0x81, 0x81, 0x80, 0x80, 0x80, 0x80, 0x80,
;0x90, 0x98, 0x94, 0x9A, 0x95, 0x90, 0x9A, 0x9C,
;0x90, 0x95, 0x94, 0x90, 0x9E, 0x96, 0x90, 0x94,
;0x8A, 0x84, 0x82, 0x81, 0x80, 0x80, 0x80, 0xFF,
;#endif
;};
;
;#include "humid_85.c"
;/****************************************************************************
;Image data created by the LCD Vision V1.05 font & image editor/converter
;(C) Copyright 2011-2013 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Graphic LCD controller: PCD8544 (Nokia 3310, 5110) 84x48
;Image width: 84 pixels
;Image height: 48 pixels
;Color depth: 1 bits/pixel
;Imported image file name: New image
;
;Exported monochrome image data size:
;532 bytes for displays organized as horizontal rows of bytes
;508 bytes for displays organized as rows of vertical bytes.
;****************************************************************************/
;
;flash unsigned char humid_85[]=
;{
;/* Image width: 84 pixels */
;0x54, 0x00,
;/* Image height: 48 pixels */
;0x30, 0x00,
;#ifndef _GLCD_DATA_BYTEY_
;/* Image data for monochrome displays organized
;   as horizontal rows of bytes */
;0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
;0xFF, 0xFF, 0x0F, 0x01, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x01, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x08, 0x01, 0x60, 0xCC, 0x98,
;0x61, 0xE6, 0xC3, 0xFE, 0x87, 0x01, 0x08, 0x01,
;0x60, 0xCC, 0x98, 0x73, 0x66, 0xC6, 0x30, 0xCC,
;0x00, 0x08, 0x01, 0x60, 0xCC, 0x98, 0x73, 0x66,
;0xCC, 0x30, 0xCC, 0x00, 0x08, 0x01, 0xE0, 0xCF,
;0x98, 0x7F, 0x66, 0xCC, 0x30, 0x78, 0x00, 0x08,
;0x01, 0x60, 0xCC, 0x98, 0x7F, 0x66, 0xCC, 0x30,
;0x30, 0x00, 0x08, 0x01, 0x60, 0xCC, 0x98, 0x7F,
;0x66, 0xCC, 0x30, 0x30, 0x00, 0x08, 0x01, 0x60,
;0xCC, 0x98, 0x6D, 0x66, 0xC6, 0x30, 0x30, 0x00,
;0x08, 0x01, 0x60, 0x8C, 0x8F, 0x6D, 0xE6, 0xC3,
;0x30, 0x30, 0x00, 0x08, 0x01, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x01,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x08, 0x01, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08,
;0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x08, 0x01, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x01, 0x00,
;0x00, 0x00, 0x70, 0x18, 0x00, 0x00, 0x00, 0x00,
;0x08, 0x01, 0x00, 0x00, 0x00, 0xD8, 0x0C, 0x00,
;0x00, 0x00, 0x00, 0x08, 0x01, 0x00, 0x00, 0x00,
;0xD8, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x08, 0x01,
;0x00, 0x00, 0x00, 0xD8, 0x06, 0x00, 0x20, 0x00,
;0x00, 0x08, 0x01, 0x00, 0x00, 0x00, 0x70, 0x06,
;0x00, 0x20, 0x00, 0x00, 0x08, 0x01, 0xC0, 0x0F,
;0xFC, 0x01, 0x03, 0x00, 0x20, 0x00, 0x00, 0x08,
;0x01, 0xE0, 0x1F, 0xFC, 0x01, 0x3B, 0x00, 0x50,
;0x00, 0x00, 0x08, 0x01, 0xF0, 0x3C, 0x0E, 0x80,
;0x6D, 0x00, 0x50, 0x00, 0x00, 0x08, 0x01, 0x70,
;0x38, 0x0E, 0x80, 0x6D, 0x00, 0x88, 0x00, 0x00,
;0x08, 0x01, 0x70, 0x38, 0x0E, 0xC0, 0x6C, 0x00,
;0x88, 0x00, 0x00, 0x08, 0x01, 0xE0, 0x1C, 0xFE,
;0xC0, 0x38, 0x00, 0x04, 0x01, 0x00, 0x08, 0x01,
;0xC0, 0x0F, 0xFF, 0x01, 0x00, 0x00, 0x04, 0x01,
;0x00, 0x08, 0x01, 0xC0, 0x0F, 0xC7, 0x03, 0x00,
;0x00, 0x02, 0x02, 0x00, 0x08, 0x01, 0xE0, 0x1C,
;0x80, 0x03, 0x00, 0x00, 0x02, 0x02, 0x00, 0x08,
;0x01, 0x70, 0x38, 0x80, 0x03, 0x00, 0x00, 0x02,
;0x02, 0x00, 0x08, 0x01, 0x70, 0x38, 0x80, 0x03,
;0x00, 0x00, 0x04, 0x01, 0x00, 0x08, 0x01, 0x70,
;0x38, 0x87, 0x03, 0x00, 0x00, 0xF8, 0x00, 0x00,
;0x08, 0x01, 0xF0, 0x3C, 0xCF, 0x01, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x08, 0x01, 0xE0, 0x1F, 0xFE,
;0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x01,
;0xC0, 0x0F, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x08, 0x01, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08,
;0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x08, 0x01, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x01, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x08, 0x01, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x01,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x08, 0xFF, 0xFF, 0xFF,
;0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F,
;#else
;/* Image data for monochrome displays organized
;   as rows of vertical bytes */
;0xFF, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
;0x01, 0x01, 0x01, 0x01, 0x01, 0xF1, 0xF1, 0x81,
;0x81, 0x81, 0xF1, 0xF1, 0x01, 0x01, 0xF1, 0xF1,
;0x01, 0x01, 0x01, 0xF1, 0xF1, 0x01, 0x01, 0xF1,
;0xF1, 0xE1, 0x81, 0x81, 0xE1, 0xF1, 0xF1, 0x01,
;0x01, 0xF1, 0xF1, 0x01, 0x01, 0xF1, 0xF1, 0x11,
;0x11, 0x31, 0xE1, 0xC1, 0x01, 0x01, 0xF1, 0xF1,
;0x01, 0x11, 0x11, 0x11, 0xF1, 0xF1, 0x11, 0x11,
;0x11, 0x11, 0x71, 0xE1, 0x81, 0x81, 0xE1, 0x71,
;0x11, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
;0x01, 0x01, 0x01, 0xFF, 0xFF, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x0F, 0x0F, 0x00, 0x00, 0x00, 0x0F, 0x0F,
;0x00, 0x00, 0x07, 0x0F, 0x08, 0x08, 0x08, 0x0F,
;0x07, 0x00, 0x00, 0x0F, 0x0F, 0x03, 0x0F, 0x0F,
;0x03, 0x0F, 0x0F, 0x00, 0x00, 0x0F, 0x0F, 0x00,
;0x00, 0x0F, 0x0F, 0x08, 0x08, 0x0C, 0x07, 0x03,
;0x00, 0x00, 0x0F, 0x0F, 0x00, 0x00, 0x00, 0x00,
;0x0F, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x0F, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF,
;0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80,
;0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
;0x80, 0x00, 0x00, 0x38, 0x7C, 0x44, 0x7C, 0x38,
;0x80, 0xE0, 0x78, 0x1C, 0x04, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x0E, 0x9F, 0xFF, 0xF3, 0x61, 0x61, 0xF3, 0xFF,
;0x9F, 0x0E, 0x00, 0x00, 0x60, 0x7E, 0x7F, 0x3F,
;0x31, 0x31, 0x71, 0xF1, 0xE1, 0xC0, 0x00, 0x00,
;0x00, 0x00, 0x18, 0x1E, 0x07, 0x01, 0x0E, 0x1F,
;0x11, 0x1F, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x30, 0x0C,
;0x03, 0x00, 0x03, 0x0C, 0x30, 0xC0, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF,
;0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x0F, 0x1F, 0x3F, 0x38,
;0x30, 0x30, 0x38, 0x3F, 0x1F, 0x0F, 0x00, 0x00,
;0x0C, 0x1C, 0x3C, 0x38, 0x30, 0x30, 0x38, 0x1F,
;0x1F, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x01, 0x02, 0x04, 0x04, 0x04, 0x04, 0x04,
;0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0xFF, 0xFF, 0x80, 0x80, 0x80,
;0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
;0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
;0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
;0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
;0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
;0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
;0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
;0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
;0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
;0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xFF,
;#endif
;};
;
;#include "soil_dry.c"
;/****************************************************************************
;Image data created by the LCD Vision V1.05 font & image editor/converter
;(C) Copyright 2011-2013 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Graphic LCD controller: PCD8544 (Nokia 3310, 5110) 84x48
;Image width: 84 pixels
;Image height: 48 pixels
;Color depth: 1 bits/pixel
;Imported image file name: New image
;
;Exported monochrome image data size:
;532 bytes for displays organized as horizontal rows of bytes
;508 bytes for displays organized as rows of vertical bytes.
;****************************************************************************/
;
;flash unsigned char soil_dry[]=
;{
;/* Image width: 84 pixels */
;0x54, 0x00,
;/* Image height: 48 pixels */
;0x30, 0x00,
;#ifndef _GLCD_DATA_BYTEY_
;/* Image data for monochrome displays organized
;   as horizontal rows of bytes */
;0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
;0xFF, 0xFF, 0x0F, 0x01, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x01, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x08, 0xF1, 0x78, 0x36, 0xC0, 0x98, 0x67, 0x9E,
;0xDF, 0xEC, 0xF3, 0x09, 0x99, 0xCD, 0x36, 0xC0,
;0xDD, 0x6C, 0xB3, 0xDF, 0x6C, 0xF6, 0x09, 0x19,
;0xCC, 0x36, 0xC0, 0xDF, 0x6C, 0x03, 0xC6, 0x6C,
;0x36, 0x08, 0x79, 0xCC, 0x36, 0xC0, 0xDA, 0x6C,
;0x0F, 0xC6, 0xEC, 0xF3, 0x09, 0xE1, 0xCD, 0x36,
;0xC0, 0xD8, 0x6C, 0x3C, 0xC6, 0xEC, 0xF0, 0x09,
;0x81, 0xCD, 0x36, 0xC0, 0xD8, 0x6C, 0x30, 0xC6,
;0xEC, 0x31, 0x08, 0x99, 0xCD, 0xF6, 0xC3, 0xD8,
;0x6C, 0x33, 0xC6, 0x6C, 0xF3, 0x09, 0xF1, 0x78,
;0xF6, 0xC3, 0x98, 0x67, 0x1E, 0x86, 0x67, 0xF6,
;0x09, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x08, 0x01, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x01,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x08, 0x01, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08,
;0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00,
;0x00, 0x00, 0x08, 0x01, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x02, 0x00, 0x00, 0x00, 0x08, 0x01, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
;0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05,
;0x00, 0x00, 0x00, 0x08, 0x01, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x08, 0x01,
;0x00, 0x00, 0x00, 0x00, 0x80, 0x08, 0x00, 0x00,
;0x00, 0x08, 0xC1, 0x1F, 0x00, 0x00, 0x00, 0x80,
;0x08, 0x00, 0x10, 0x08, 0x08, 0xC1, 0x7F, 0x00,
;0x00, 0x80, 0x41, 0x10, 0x18, 0x92, 0x49, 0x08,
;0xC1, 0x60, 0x00, 0x00, 0x80, 0x43, 0x10, 0x1C,
;0x54, 0x2A, 0x08, 0xC1, 0xC0, 0xEC, 0xC1, 0x00,
;0x27, 0x20, 0x0E, 0x38, 0x1C, 0x08, 0xC1, 0xC0,
;0xFC, 0xC1, 0x00, 0x2E, 0x20, 0x07, 0x38, 0x1C,
;0x08, 0xC1, 0xC0, 0x1C, 0x63, 0x00, 0x1C, 0xC0,
;0x83, 0xFF, 0xFF, 0x09, 0xC1, 0xC0, 0x0C, 0x63,
;0x00, 0x38, 0xC0, 0x81, 0x10, 0x08, 0x09, 0xC1,
;0xC0, 0x0C, 0x36, 0x00, 0x78, 0xE0, 0x80, 0x00,
;0x00, 0x09, 0xC1, 0xC0, 0x0C, 0x36, 0x00, 0xE8,
;0xF0, 0x80, 0xFF, 0xFF, 0x09, 0xC1, 0x60, 0x0C,
;0x3E, 0x00, 0xC4, 0x39, 0x81, 0x00, 0x00, 0x09,
;0xC1, 0x7F, 0x0C, 0x1C, 0x00, 0x84, 0x1F, 0x81,
;0x00, 0x00, 0x09, 0xC1, 0x1F, 0x0C, 0x1C, 0x00,
;0x02, 0x0F, 0x82, 0x30, 0x0C, 0x09, 0x01, 0x00,
;0x00, 0x0C, 0x00, 0x02, 0x0F, 0x82, 0xCF, 0xF3,
;0x09, 0x01, 0x00, 0x00, 0x0F, 0x00, 0x82, 0x1F,
;0x82, 0x24, 0x49, 0x09, 0x01, 0x00, 0x00, 0x07,
;0x00, 0xC2, 0x39, 0x82, 0x92, 0x24, 0x09, 0x01,
;0x00, 0x00, 0x00, 0x00, 0xE2, 0x70, 0x82, 0x79,
;0x9E, 0x09, 0x01, 0x00, 0x00, 0x00, 0x00, 0x72,
;0xE0, 0x82, 0xFF, 0xFF, 0x09, 0x01, 0x00, 0x00,
;0x00, 0x00, 0x3C, 0xC0, 0x81, 0x7B, 0xDF, 0x09,
;0x01, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x80, 0x83,
;0xBD, 0xEF, 0x09, 0x01, 0x00, 0x00, 0x00, 0x00,
;0x1E, 0x40, 0x87, 0xDE, 0xF7, 0x09, 0x01, 0x00,
;0x00, 0x00, 0x00, 0x27, 0x20, 0x8E, 0xCF, 0xF3,
;0x09, 0x01, 0x00, 0x00, 0x00, 0x80, 0x43, 0x10,
;0x1C, 0x00, 0x00, 0x08, 0x01, 0x00, 0x00, 0x00,
;0x80, 0x81, 0x0F, 0x18, 0x00, 0x00, 0x08, 0x01,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x08, 0xFF, 0xFF, 0xFF,
;0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F,
;#else
;/* Image data for monochrome displays organized
;   as rows of vertical bytes */
;0xFF, 0x01, 0x01, 0x71, 0x79, 0xC9, 0xC9, 0x99,
;0x91, 0x01, 0xF1, 0xF9, 0x09, 0x09, 0xF9, 0xF1,
;0x01, 0xF9, 0xF9, 0x01, 0xF9, 0xF9, 0x01, 0x01,
;0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xF9, 0xF9,
;0x31, 0x61, 0x31, 0xF9, 0xF9, 0x01, 0xF1, 0xF9,
;0x09, 0x09, 0xF9, 0xF1, 0x01, 0xF9, 0xF9, 0x01,
;0x71, 0x79, 0xC9, 0xC9, 0x99, 0x91, 0x01, 0x19,
;0x19, 0xF9, 0xF9, 0x19, 0x19, 0x01, 0xF9, 0xF9,
;0x01, 0x01, 0xF9, 0xF9, 0x01, 0xF9, 0xF9, 0xC9,
;0x49, 0x79, 0x31, 0x01, 0xF9, 0xF9, 0xD9, 0xD9,
;0xD9, 0x01, 0x01, 0xFF, 0xFF, 0x00, 0x00, 0x02,
;0x06, 0x04, 0x04, 0x07, 0x03, 0x00, 0x03, 0x07,
;0x04, 0x04, 0x07, 0x03, 0x00, 0x07, 0x07, 0x00,
;0x07, 0x07, 0x06, 0x06, 0x06, 0x06, 0x00, 0x00,
;0x00, 0x00, 0x07, 0x07, 0x00, 0x00, 0x00, 0x07,
;0x07, 0x00, 0x03, 0x07, 0x04, 0x04, 0x07, 0x03,
;0x00, 0x07, 0x07, 0x00, 0x02, 0x06, 0x04, 0x04,
;0x07, 0x03, 0x00, 0x00, 0x00, 0x07, 0x07, 0x00,
;0x00, 0x00, 0x03, 0x07, 0x04, 0x04, 0x07, 0x03,
;0x00, 0x07, 0x07, 0x01, 0x03, 0x06, 0x04, 0x00,
;0x07, 0x07, 0x06, 0x06, 0x06, 0x00, 0x00, 0xFF,
;0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xC0,
;0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0x80, 0x80, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80,
;0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x60,
;0x18, 0x07, 0x18, 0x60, 0x80, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x80, 0x80, 0x00, 0x00, 0x00,
;0x00, 0x80, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x80,
;0x80, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x80, 0x00,
;0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00,
;0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x81, 0xFF, 0x7E, 0x00, 0x00, 0xFE, 0xFE,
;0x0C, 0x06, 0x06, 0x06, 0x1E, 0xF8, 0xE0, 0x80,
;0xE0, 0xF8, 0x1E, 0x06, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x01, 0x03, 0x07, 0x8E, 0x7C,
;0x38, 0x76, 0xE1, 0xC0, 0x80, 0x00, 0x00, 0x80,
;0xC1, 0xE6, 0x78, 0x78, 0x9C, 0x0E, 0x07, 0x03,
;0x01, 0x00, 0x00, 0xF8, 0x48, 0x48, 0x49, 0x4E,
;0x5F, 0x4E, 0x49, 0x48, 0x48, 0x49, 0x4E, 0x5F,
;0x4E, 0x49, 0x48, 0x48, 0xF8, 0x00, 0x00, 0xFF,
;0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x03,
;0x03, 0x03, 0x03, 0x03, 0x03, 0x01, 0x01, 0x00,
;0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00,
;0x18, 0x18, 0x1F, 0x0F, 0x03, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x7E, 0x81, 0x80, 0xC0, 0xE0, 0x70, 0x39,
;0x1F, 0x0F, 0x0F, 0x1F, 0x39, 0x70, 0xE0, 0xC0,
;0x81, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF,
;0xE4, 0xD4, 0x4C, 0xE4, 0xF2, 0xEA, 0xE4, 0x54,
;0xCC, 0xE4, 0xF2, 0xEA, 0xE4, 0x54, 0xCC, 0xE4,
;0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x80, 0x80, 0x80,
;0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
;0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
;0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
;0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
;0x80, 0x80, 0x80, 0x98, 0x9C, 0x8E, 0x87, 0x83,
;0x83, 0x84, 0x88, 0x90, 0x90, 0x90, 0x90, 0x90,
;0x88, 0x84, 0x82, 0x81, 0x83, 0x87, 0x8E, 0x9C,
;0x98, 0x80, 0x80, 0x87, 0x85, 0x86, 0x87, 0x87,
;0x83, 0x81, 0x86, 0x87, 0x87, 0x87, 0x83, 0x81,
;0x86, 0x87, 0x87, 0x87, 0x87, 0x80, 0x80, 0xFF,
;#endif
;};
;
;#include "soil_wet.c"
;/****************************************************************************
;Image data created by the LCD Vision V1.05 font & image editor/converter
;(C) Copyright 2011-2013 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Graphic LCD controller: PCD8544 (Nokia 3310, 5110) 84x48
;Image width: 84 pixels
;Image height: 48 pixels
;Color depth: 1 bits/pixel
;Imported image file name: New image
;
;Exported monochrome image data size:
;532 bytes for displays organized as horizontal rows of bytes
;508 bytes for displays organized as rows of vertical bytes.
;****************************************************************************/
;
;flash unsigned char soil_wet[]=
;{
;/* Image width: 84 pixels */
;0x54, 0x00,
;/* Image height: 48 pixels */
;0x30, 0x00,
;#ifndef _GLCD_DATA_BYTEY_
;/* Image data for monochrome displays organized
;   as horizontal rows of bytes */
;0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
;0xFF, 0xFF, 0x0F, 0x01, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x01, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x08, 0xF1, 0x78, 0x36, 0xC0, 0x98, 0x67, 0x9E,
;0xDF, 0xEC, 0xF3, 0x09, 0x99, 0xCD, 0x36, 0xC0,
;0xDD, 0x6C, 0xB3, 0xDF, 0x6C, 0xF6, 0x09, 0x19,
;0xCC, 0x36, 0xC0, 0xDF, 0x6C, 0x03, 0xC6, 0x6C,
;0x36, 0x08, 0x79, 0xCC, 0x36, 0xC0, 0xDA, 0x6C,
;0x0F, 0xC6, 0xEC, 0xF3, 0x09, 0xE1, 0xCD, 0x36,
;0xC0, 0xD8, 0x6C, 0x3C, 0xC6, 0xEC, 0xF0, 0x09,
;0x81, 0xCD, 0x36, 0xC0, 0xD8, 0x6C, 0x30, 0xC6,
;0xEC, 0x31, 0x08, 0x99, 0xCD, 0xF6, 0xC3, 0xD8,
;0x6C, 0x33, 0xC6, 0x6C, 0xF3, 0x09, 0xF1, 0x78,
;0xF6, 0xC3, 0x98, 0x67, 0x1E, 0x86, 0x67, 0xF6,
;0x09, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x08, 0x01, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x01,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x08, 0x01, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08,
;0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00,
;0x00, 0x00, 0x08, 0x01, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x02, 0x00, 0x00, 0x00, 0x08, 0x01, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
;0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
;0x00, 0x00, 0x00, 0x08, 0x01, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x08, 0x01,
;0x00, 0x00, 0x00, 0x00, 0x80, 0x0F, 0x00, 0x00,
;0x00, 0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x80,
;0x0F, 0x00, 0x10, 0x08, 0x08, 0xC1, 0x70, 0x18,
;0x00, 0x01, 0xC0, 0x1F, 0x00, 0x92, 0x49, 0x08,
;0xC1, 0x71, 0x18, 0x80, 0x01, 0xC0, 0x1F, 0x00,
;0x54, 0x2A, 0x08, 0x81, 0x71, 0x0C, 0x80, 0x01,
;0xE0, 0x3F, 0x00, 0x38, 0x1C, 0x08, 0x81, 0xD9,
;0x0C, 0xC7, 0x07, 0xE0, 0x3F, 0x00, 0x38, 0x1C,
;0x08, 0x81, 0xD9, 0x8C, 0xCF, 0x07, 0xF0, 0x7F,
;0x80, 0xFF, 0xFF, 0x09, 0x01, 0xDB, 0xC6, 0x98,
;0x01, 0xF0, 0x7F, 0x80, 0x10, 0x08, 0x09, 0x01,
;0xDB, 0xC6, 0x9F, 0x01, 0xF8, 0xFF, 0x80, 0x00,
;0x00, 0x09, 0x01, 0xDB, 0xC6, 0x9F, 0x01, 0xF8,
;0xFF, 0x80, 0xFF, 0xFF, 0x09, 0x01, 0x8E, 0xC7,
;0x80, 0x01, 0xFC, 0xFF, 0x81, 0x00, 0x00, 0x09,
;0x01, 0x8E, 0xC3, 0x99, 0x01, 0xFC, 0xFF, 0x81,
;0x00, 0x00, 0x09, 0x01, 0x8E, 0x83, 0x8F, 0x07,
;0xFE, 0xFF, 0x83, 0x30, 0x0C, 0x09, 0x01, 0x8E,
;0x03, 0x07, 0x07, 0xFE, 0xFF, 0x83, 0xCF, 0xF3,
;0x09, 0x01, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF,
;0x83, 0x24, 0x49, 0x09, 0x01, 0x00, 0x00, 0x00,
;0x00, 0xFE, 0xFF, 0x83, 0x92, 0x24, 0x09, 0x01,
;0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0x83, 0x79,
;0x9E, 0x09, 0x01, 0x00, 0x00, 0x00, 0x00, 0xFE,
;0xFF, 0x83, 0xFF, 0xFF, 0x09, 0x01, 0x00, 0x00,
;0x00, 0x00, 0xFC, 0xFF, 0x81, 0x7B, 0xDF, 0x09,
;0x01, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xFF, 0x80,
;0xBD, 0xEF, 0x09, 0x01, 0x00, 0x00, 0x00, 0x00,
;0xF0, 0x7F, 0x80, 0xDE, 0xF7, 0x09, 0x01, 0x00,
;0x00, 0x00, 0x00, 0xE0, 0x3F, 0x80, 0xCF, 0xF3,
;0x09, 0x01, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x1F,
;0x00, 0x00, 0x00, 0x08, 0x01, 0x00, 0x00, 0x00,
;0x00, 0x80, 0x0F, 0x00, 0x00, 0x00, 0x08, 0x01,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x08, 0xFF, 0xFF, 0xFF,
;0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F,
;#else
;/* Image data for monochrome displays organized
;   as rows of vertical bytes */
;0xFF, 0x01, 0x01, 0x71, 0x79, 0xC9, 0xC9, 0x99,
;0x91, 0x01, 0xF1, 0xF9, 0x09, 0x09, 0xF9, 0xF1,
;0x01, 0xF9, 0xF9, 0x01, 0xF9, 0xF9, 0x01, 0x01,
;0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xF9, 0xF9,
;0x31, 0x61, 0x31, 0xF9, 0xF9, 0x01, 0xF1, 0xF9,
;0x09, 0x09, 0xF9, 0xF1, 0x01, 0xF9, 0xF9, 0x01,
;0x71, 0x79, 0xC9, 0xC9, 0x99, 0x91, 0x01, 0x19,
;0x19, 0xF9, 0xF9, 0x19, 0x19, 0x01, 0xF9, 0xF9,
;0x01, 0x01, 0xF9, 0xF9, 0x01, 0xF9, 0xF9, 0xC9,
;0x49, 0x79, 0x31, 0x01, 0xF9, 0xF9, 0xD9, 0xD9,
;0xD9, 0x01, 0x01, 0xFF, 0xFF, 0x00, 0x00, 0x02,
;0x06, 0x04, 0x04, 0x07, 0x03, 0x00, 0x03, 0x07,
;0x04, 0x04, 0x07, 0x03, 0x00, 0x07, 0x07, 0x00,
;0x07, 0x07, 0x06, 0x06, 0x06, 0x06, 0x00, 0x00,
;0x00, 0x00, 0x07, 0x07, 0x00, 0x00, 0x00, 0x07,
;0x07, 0x00, 0x03, 0x07, 0x04, 0x04, 0x07, 0x03,
;0x00, 0x07, 0x07, 0x00, 0x02, 0x06, 0x04, 0x04,
;0x07, 0x03, 0x00, 0x00, 0x00, 0x07, 0x07, 0x00,
;0x00, 0x00, 0x03, 0x07, 0x04, 0x04, 0x07, 0x03,
;0x00, 0x07, 0x07, 0x01, 0x03, 0x06, 0x04, 0x00,
;0x07, 0x07, 0x06, 0x06, 0x06, 0x00, 0x00, 0xFF,
;0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80,
;0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x00,
;0x00, 0x00, 0x00, 0x80, 0x80, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xE0,
;0xF8, 0xFF, 0xF8, 0xE0, 0x80, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x80, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x80,
;0x80, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x80, 0x00,
;0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x01, 0x0F, 0x7F, 0xF0, 0x80, 0xFC,
;0x7F, 0x03, 0x7F, 0xFC, 0x80, 0xF0, 0xFE, 0x0F,
;0x01, 0x00, 0xF0, 0xF8, 0x6C, 0x6C, 0x6C, 0x78,
;0x70, 0x00, 0x0C, 0xFF, 0xFF, 0x0C, 0x0C, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xE0,
;0xF8, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
;0xFF, 0xFE, 0xF8, 0xE0, 0x80, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0xF8, 0x48, 0x48, 0x49, 0x4E,
;0x5F, 0x4E, 0x49, 0x48, 0x48, 0x49, 0x4E, 0x5F,
;0x4E, 0x49, 0x48, 0x48, 0xF8, 0x00, 0x00, 0xFF,
;0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x07, 0x07, 0x07, 0x00, 0x00, 0x00, 0x07,
;0x07, 0x07, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03,
;0x07, 0x06, 0x06, 0x03, 0x01, 0x00, 0x00, 0x03,
;0x07, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x7E, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
;0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
;0xFF, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF,
;0xE4, 0xD4, 0x4C, 0xE4, 0xF2, 0xEA, 0xE4, 0x54,
;0xCC, 0xE4, 0xF2, 0xEA, 0xE4, 0x54, 0xCC, 0xE4,
;0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x80, 0x80, 0x80,
;0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
;0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
;0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
;0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
;0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x81,
;0x83, 0x87, 0x8F, 0x9F, 0x9F, 0x9F, 0x9F, 0x9F,
;0x8F, 0x87, 0x83, 0x81, 0x80, 0x80, 0x80, 0x80,
;0x80, 0x80, 0x80, 0x87, 0x85, 0x86, 0x87, 0x87,
;0x83, 0x81, 0x86, 0x87, 0x87, 0x87, 0x83, 0x81,
;0x86, 0x87, 0x87, 0x87, 0x87, 0x80, 0x80, 0xFF,
;#endif
;};
;
;#include "air_70.c"
;/****************************************************************************
;Image data created by the LCD Vision V1.05 font & image editor/converter
;(C) Copyright 2011-2013 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Graphic LCD controller: PCD8544 (Nokia 3310, 5110) 84x48
;Image width: 84 pixels
;Image height: 48 pixels
;Color depth: 1 bits/pixel
;Imported image file name: New image
;
;Exported monochrome image data size:
;532 bytes for displays organized as horizontal rows of bytes
;508 bytes for displays organized as rows of vertical bytes.
;****************************************************************************/
;
;flash unsigned char air_70[]=
;{
;/* Image width: 84 pixels */
;0x54, 0x00,
;/* Image height: 48 pixels */
;0x30, 0x00,
;#ifndef _GLCD_DATA_BYTEY_
;/* Image data for monochrome displays organized
;   as horizontal rows of bytes */
;0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
;0xFF, 0xFF, 0x0F, 0x01, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x01, 0x8C,
;0x7D, 0x30, 0x9B, 0x8D, 0xED, 0xB3, 0xDF, 0x0C,
;0x08, 0x01, 0x9E, 0xCD, 0x30, 0x9B, 0xDD, 0x6D,
;0xB6, 0xDF, 0x0C, 0x08, 0x01, 0xB3, 0xCD, 0x30,
;0x9B, 0xFD, 0x6D, 0x36, 0xC6, 0x0C, 0x08, 0x01,
;0xBF, 0x7D, 0xF0, 0x9B, 0xAD, 0x6D, 0x36, 0xC6,
;0x0C, 0x08, 0x01, 0xBF, 0x1D, 0xF0, 0x9B, 0x8D,
;0x6D, 0x36, 0x86, 0x07, 0x08, 0x01, 0xB3, 0x3D,
;0x30, 0x9B, 0x8D, 0x6D, 0x36, 0x06, 0x03, 0x08,
;0x01, 0xB3, 0x6D, 0x30, 0x9B, 0x8D, 0x6D, 0x36,
;0x06, 0x03, 0x08, 0x01, 0xB3, 0xCD, 0x30, 0xF3,
;0x8C, 0xED, 0x33, 0x06, 0x03, 0x08, 0x01, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x08, 0x01, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x01,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x08, 0x01, 0x00, 0x00,
;0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x08,
;0x01, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x20,
;0x00, 0x00, 0x08, 0x01, 0x00, 0x00, 0x00, 0x00,
;0x80, 0x00, 0x20, 0x00, 0x00, 0x08, 0x01, 0x00,
;0x00, 0x38, 0x01, 0xC0, 0x01, 0x20, 0x00, 0x00,
;0x08, 0x01, 0x00, 0x00, 0x28, 0x01, 0xC0, 0x01,
;0x70, 0x00, 0x00, 0x08, 0x01, 0x00, 0x00, 0x28,
;0x01, 0xE0, 0x03, 0x70, 0x00, 0x00, 0x08, 0x01,
;0x00, 0x00, 0xA8, 0x00, 0xE0, 0x03, 0xF8, 0x00,
;0x00, 0x08, 0x01, 0x00, 0x00, 0xB8, 0x00, 0xF0,
;0x07, 0xF8, 0x00, 0x00, 0x08, 0x01, 0x00, 0x00,
;0x40, 0x07, 0xF0, 0x07, 0x74, 0x01, 0x00, 0x08,
;0xC1, 0x7F, 0x70, 0x40, 0x05, 0xF8, 0x0F, 0x24,
;0x01, 0x00, 0x08, 0xC1, 0x7F, 0xFC, 0x41, 0x05,
;0xF8, 0x0F, 0x02, 0x02, 0x00, 0x08, 0x01, 0x70,
;0xDC, 0x21, 0x05, 0xF8, 0x0F, 0x02, 0x02, 0x00,
;0x08, 0x01, 0x38, 0x8E, 0x23, 0x07, 0xF0, 0x07,
;0x01, 0x04, 0x00, 0x08, 0x01, 0x1C, 0x8E, 0x03,
;0x00, 0xE0, 0x03, 0x01, 0x08, 0x00, 0x08, 0x01,
;0x0E, 0x8E, 0x03, 0x00, 0x00, 0x80, 0x00, 0x08,
;0x00, 0x08, 0x01, 0x0E, 0x8E, 0x03, 0x00, 0x00,
;0x80, 0x00, 0x10, 0x00, 0x08, 0x01, 0x07, 0x8E,
;0x03, 0x00, 0x00, 0x40, 0x00, 0x10, 0x00, 0x08,
;0x01, 0x07, 0x8E, 0x03, 0x00, 0x00, 0x40, 0x00,
;0x20, 0x10, 0x08, 0x01, 0x07, 0x8E, 0x03, 0x00,
;0x00, 0x20, 0x00, 0x20, 0x10, 0x08, 0x81, 0x03,
;0x8E, 0x03, 0x00, 0x00, 0x20, 0x00, 0x20, 0x10,
;0x08, 0x81, 0x03, 0xDC, 0x01, 0x00, 0x00, 0x20,
;0x00, 0x20, 0x38, 0x08, 0x81, 0x03, 0xFC, 0x01,
;0x00, 0x00, 0x20, 0x00, 0x20, 0x78, 0x08, 0x81,
;0x03, 0x70, 0x00, 0x00, 0x00, 0x20, 0x00, 0x20,
;0x7C, 0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x20, 0x00, 0x20, 0x7C, 0x08, 0x01, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x40, 0x00, 0x10, 0xFE, 0x08,
;0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00,
;0x08, 0xFE, 0x08, 0x01, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x01, 0x04, 0xFF, 0x09, 0x01, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0xFF,
;0x09, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x04, 0x01, 0xFF, 0x09, 0x01, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0xF8, 0x00, 0xFE, 0x08, 0x01,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x7C, 0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x08, 0xFF, 0xFF, 0xFF,
;0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F,
;#else
;/* Image data for monochrome displays organized
;   as rows of vertical bytes */
;0xFF, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
;0xF1, 0xF9, 0x6D, 0x6D, 0xF9, 0xF1, 0x01, 0xFD,
;0xFD, 0x01, 0xFD, 0xFD, 0xE5, 0xA5, 0x3D, 0x19,
;0x01, 0x01, 0x01, 0x01, 0xFD, 0xFD, 0x61, 0x61,
;0xFD, 0xFD, 0x01, 0xFD, 0xFD, 0x01, 0x01, 0xFD,
;0xFD, 0x01, 0xFD, 0xFD, 0x19, 0x31, 0x19, 0xFD,
;0xFD, 0x01, 0xFD, 0xFD, 0x01, 0xFD, 0xFD, 0x05,
;0x05, 0xFD, 0xF9, 0x01, 0xFD, 0xFD, 0x01, 0x0D,
;0x0D, 0xFD, 0xFD, 0x0D, 0x0D, 0x01, 0x3D, 0x7D,
;0xC1, 0xC1, 0x7D, 0x3D, 0x01, 0x01, 0x01, 0x01,
;0x01, 0x01, 0x01, 0xFF, 0xFF, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00,
;0x03, 0x03, 0x00, 0x03, 0x03, 0x00, 0x03, 0x03,
;0x00, 0x01, 0x03, 0x02, 0x00, 0x00, 0x00, 0x00,
;0x03, 0x03, 0x00, 0x00, 0x03, 0x03, 0x00, 0x01,
;0x03, 0x02, 0x02, 0x03, 0x01, 0x00, 0x03, 0x03,
;0x00, 0x00, 0x00, 0x83, 0x03, 0x00, 0x03, 0x03,
;0x00, 0x03, 0x03, 0x02, 0x02, 0x03, 0x01, 0x00,
;0x03, 0x03, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF,
;0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x7C, 0x44, 0x7C, 0x80, 0x60,
;0x9C, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0xC0, 0xF0, 0xFC, 0xFF,
;0xFC, 0xF0, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x80, 0x60, 0xF8, 0xFF, 0xF8, 0x60,
;0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x03, 0x03, 0x83, 0xE3, 0xF3, 0x7B,
;0x1F, 0x0F, 0x07, 0x00, 0x00, 0xF8, 0xFE, 0xFE,
;0x07, 0x03, 0x07, 0xFE, 0xFE, 0xF8, 0x00, 0x00,
;0x00, 0x0C, 0x03, 0x00, 0x0F, 0x08, 0x0F, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
;0x0F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x0F, 0x07,
;0x00, 0x00, 0x80, 0x60, 0x18, 0x06, 0x01, 0x00,
;0x00, 0x01, 0x00, 0x00, 0x01, 0x06, 0x08, 0x30,
;0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF,
;0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C,
;0x3F, 0x3F, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x07, 0x1F, 0x1F, 0x38, 0x30, 0x38, 0x1F,
;0x1F, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x7E, 0x81, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x80, 0x7F, 0x00, 0x00,
;0x00, 0x80, 0xE0, 0xF8, 0xFF, 0xF8, 0xF0, 0x80,
;0x00, 0x00, 0x00, 0xFF, 0xFF, 0x80, 0x80, 0x80,
;0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
;0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
;0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
;0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
;0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
;0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
;0x80, 0x80, 0x80, 0x81, 0x82, 0x84, 0x88, 0x90,
;0x90, 0x90, 0x90, 0x90, 0x88, 0x84, 0x82, 0x81,
;0x80, 0x80, 0x80, 0x80, 0x8E, 0x9F, 0xBF, 0xBF,
;0xBF, 0xBF, 0xBF, 0x9F, 0x8E, 0x80, 0x80, 0xFF,
;#endif
;};
;
;#include "temp.c"
;/****************************************************************************
;Image data created by the LCD Vision V1.05 font & image editor/converter
;(C) Copyright 2011-2013 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Graphic LCD controller: PCD8544 (Nokia 3310, 5110) 84x48
;Image width: 84 pixels
;Image height: 48 pixels
;Color depth: 1 bits/pixel
;Imported image file name: New image
;
;Exported monochrome image data size:
;532 bytes for displays organized as horizontal rows of bytes
;508 bytes for displays organized as rows of vertical bytes.
;****************************************************************************/
;
;flash unsigned char temp[]=
;{
;/* Image width: 84 pixels */
;0x54, 0x00,
;/* Image height: 48 pixels */
;0x30, 0x00,
;#ifndef _GLCD_DATA_BYTEY_
;/* Image data for monochrome displays organized
;   as horizontal rows of bytes */
;0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
;0xFF, 0xFF, 0x0F, 0x01, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x01, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x08, 0xF9, 0x7D, 0xC7, 0x7D,
;0xBE, 0x0F, 0xC7, 0x6F, 0xF6, 0xF9, 0x08, 0x61,
;0x0C, 0xC7, 0xCD, 0x86, 0x19, 0x07, 0x63, 0x36,
;0x1B, 0x08, 0x61, 0x0C, 0xEF, 0xCD, 0x86, 0x99,
;0x0D, 0x63, 0x36, 0x1B, 0x08, 0x61, 0x7C, 0xEF,
;0xCD, 0xBE, 0x99, 0x0D, 0x63, 0x36, 0xFB, 0x08,
;0x61, 0x0C, 0xAB, 0x7D, 0x86, 0x8F, 0x0D, 0x63,
;0xF6, 0x19, 0x08, 0x61, 0x0C, 0xBB, 0x0D, 0x86,
;0xCD, 0x1F, 0x63, 0xB6, 0x19, 0x08, 0x61, 0x0C,
;0xBB, 0x0D, 0x86, 0xD9, 0x18, 0x63, 0x36, 0x1B,
;0x08, 0x61, 0x7C, 0x93, 0x0D, 0xBE, 0xF1, 0x18,
;0xC3, 0x33, 0xFE, 0x08, 0x01, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x01,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x08, 0x01, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08,
;0x01, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x08, 0x01, 0x09, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x81, 0x10,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x08, 0x81, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x08, 0x81, 0x10, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x81,
;0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x08, 0x81, 0x10, 0x0F, 0x00, 0x00, 0x00,
;0x00, 0x1C, 0x00, 0x00, 0x08, 0x81, 0x1F, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x08,
;0x81, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x22,
;0x00, 0x00, 0x08, 0x81, 0x1F, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x22, 0x00, 0x00, 0x08, 0x81, 0x1F,
;0x06, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00,
;0x08, 0x81, 0x1F, 0x00, 0x00, 0xFC, 0x80, 0x0F,
;0x1C, 0xE0, 0x03, 0x08, 0x81, 0x1F, 0x00, 0x00,
;0xFE, 0xE1, 0x1F, 0x00, 0xF8, 0x0F, 0x08, 0x81,
;0x1F, 0x00, 0x00, 0xCF, 0xE3, 0x3C, 0x00, 0xFC,
;0x1F, 0x08, 0x81, 0x1F, 0x0F, 0x00, 0x87, 0x73,
;0x08, 0x00, 0x3C, 0x3C, 0x08, 0x81, 0x1F, 0x00,
;0x00, 0x80, 0x73, 0x00, 0x00, 0x1E, 0x18, 0x08,
;0xC1, 0x7F, 0x00, 0x00, 0x80, 0x73, 0x0F, 0x00,
;0x0E, 0x00, 0x08, 0xE1, 0xFF, 0x00, 0x00, 0xC0,
;0xF1, 0x1F, 0x00, 0x0E, 0x00, 0x08, 0xF1, 0xFF,
;0x01, 0x00, 0xE0, 0xF1, 0x1C, 0x00, 0x0E, 0x00,
;0x08, 0xF1, 0xFF, 0x01, 0x00, 0xF0, 0x70, 0x38,
;0x00, 0x0E, 0x00, 0x08, 0xF9, 0xFF, 0x03, 0x00,
;0x78, 0x70, 0x38, 0x00, 0x0E, 0x00, 0x08, 0xF9,
;0xFF, 0x03, 0x00, 0x3C, 0x70, 0x38, 0x00, 0x1E,
;0x18, 0x08, 0xF9, 0xFF, 0x03, 0x00, 0x1C, 0x70,
;0x38, 0x00, 0x3C, 0x3C, 0x08, 0xF9, 0xFF, 0x03,
;0x00, 0x0E, 0xE0, 0x1C, 0x00, 0xFC, 0x1F, 0x08,
;0xF9, 0xFF, 0x03, 0x00, 0xFF, 0xE3, 0x1F, 0x00,
;0xF8, 0x0F, 0x08, 0xF1, 0xFF, 0x01, 0x00, 0xFF,
;0x83, 0x07, 0x00, 0xE0, 0x03, 0x08, 0xF1, 0xFF,
;0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x08, 0xE1, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x08, 0xC1, 0x7F, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x01,
;0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x08, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x08, 0xFF, 0xFF, 0xFF,
;0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F,
;#else
;/* Image data for monochrome displays organized
;   as rows of vertical bytes */
;0xFF, 0x01, 0x01, 0x11, 0x11, 0xF1, 0xF1, 0x11,
;0x11, 0x01, 0xF1, 0xF1, 0x91, 0x91, 0x91, 0x01,
;0xF1, 0xF1, 0xF1, 0xC1, 0x01, 0xC1, 0xF1, 0xF1,
;0xF1, 0x01, 0xF1, 0xF1, 0x11, 0x11, 0xF1, 0xE1,
;0x01, 0xF1, 0xF1, 0x91, 0x91, 0x91, 0x01, 0xF1,
;0xF1, 0x11, 0x11, 0xF1, 0xE1, 0x01, 0x01, 0xC1,
;0xF1, 0x31, 0xF1, 0xC1, 0x01, 0x01, 0x11, 0x11,
;0xF1, 0xF1, 0x11, 0x11, 0x01, 0xF1, 0xF1, 0x01,
;0x01, 0xF1, 0xF1, 0x01, 0xF1, 0xF1, 0x11, 0x11,
;0xF1, 0xE1, 0x01, 0xF1, 0xF1, 0x91, 0x91, 0x91,
;0x01, 0x01, 0x01, 0xFF, 0xFF, 0x00, 0x00, 0x00,
;0x00, 0x0F, 0x0F, 0x00, 0x00, 0x00, 0x0F, 0x0F,
;0x08, 0x08, 0x08, 0x00, 0x0F, 0x0F, 0x00, 0x07,
;0x0E, 0x07, 0x00, 0x0F, 0x0F, 0x00, 0x0F, 0x0F,
;0x01, 0x01, 0x01, 0x00, 0x00, 0x0F, 0x0F, 0x08,
;0x08, 0x08, 0x00, 0x0F, 0x0F, 0x01, 0x03, 0x07,
;0x0C, 0x08, 0x0E, 0x0F, 0x03, 0x02, 0x03, 0x0F,
;0x0E, 0x00, 0x00, 0x00, 0x0F, 0x0F, 0x00, 0x00,
;0x00, 0x07, 0x0F, 0x08, 0x08, 0x0F, 0x07, 0x00,
;0x0F, 0x0F, 0x01, 0x03, 0x07, 0x0C, 0x08, 0x0F,
;0x0F, 0x08, 0x08, 0x08, 0x00, 0x00, 0x00, 0xFF,
;0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC,
;0x82, 0x81, 0xA1, 0xA2, 0xFC, 0x00, 0x00, 0x00,
;0x40, 0x40, 0x40, 0x40, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x80, 0xC0, 0x40, 0xC0, 0x80, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
;0xFF, 0x00, 0x00, 0x00, 0x40, 0x44, 0x44, 0x40,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x60, 0x70, 0x78, 0x38,
;0x18, 0x18, 0x38, 0xF8, 0xF0, 0xE0, 0x00, 0x00,
;0xC0, 0xF0, 0xF0, 0x38, 0x18, 0x18, 0x38, 0x78,
;0x30, 0x20, 0x00, 0x00, 0x00, 0x07, 0x0C, 0x08,
;0x0C, 0x07, 0x00, 0x00, 0x00, 0x80, 0xE0, 0xF0,
;0xF0, 0x78, 0x38, 0x38, 0x38, 0x38, 0x70, 0xF0,
;0xE0, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF,
;0xFF, 0x00, 0x00, 0xF0, 0xFC, 0xFE, 0xFF, 0xFF,
;0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE,
;0xFC, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x80, 0xE0, 0xF0, 0x78, 0x3C, 0x1E, 0x0F,
;0x07, 0x01, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0x86,
;0x03, 0x03, 0x87, 0xFF, 0xFE, 0x78, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x3F, 0xFF, 0xFF, 0xE0, 0xC0, 0x80, 0x80,
;0x80, 0x80, 0xC0, 0xE0, 0xE0, 0x40, 0x00, 0x00,
;0x00, 0x00, 0x00, 0xFF, 0xFF, 0x80, 0x80, 0x81,
;0x87, 0x8F, 0x9F, 0x9F, 0xBF, 0xBF, 0xBF, 0xBF,
;0xBF, 0x9F, 0x9F, 0x8F, 0x87, 0x81, 0x80, 0x80,
;0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
;0x80, 0x80, 0x80, 0x80, 0x83, 0x83, 0x83, 0x83,
;0x83, 0x83, 0x83, 0x83, 0x83, 0x83, 0x80, 0x80,
;0x80, 0x81, 0x81, 0x83, 0x83, 0x83, 0x83, 0x81,
;0x81, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
;0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x81,
;0x81, 0x83, 0x83, 0x83, 0x83, 0x83, 0x81, 0x81,
;0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xFF,
;#endif
;};
;
;
;
;
;
;#include <font5x7.h>
;#include <rf.c>
;typedef struct
;{
;    int flag;
;    float a;
;    float b;
;    float c;
;    float d;
;}data;
;
;typedef struct
;{
;    int flag;
;    int light;
;    int humi;
;    int temp;
;    int sm;
;}station_info;
;
;typedef struct
;{
;    int analog_l;
;    int analog_r;
;    int digital_l;
;    int digital_r;
;}tay_cam_info;
;
;station_info station_receive;
;tay_cam_info tay_cam_receive;
;
;data data_receive;
;unsigned char data_receive_2;
;unsigned char result;
;
;void config();
;
;//-----------------------------TX Mode -----------------------------------------------//
;unsigned char SPI_RW_TX(unsigned char Buff);                                       //Function used for text moving
;void RF_Init_TX();                                                                 //Function allow to Initialize RF dev ...
;unsigned char RF_Write_TX(unsigned char Reg_Add, unsigned char Value);                      //Function to write a value  ...
;void RF_Write_Address_TX(unsigned char Address);                                   //Function to write TX address for pi ...
;void RF_Write_Address_2_TX(unsigned char Address);                                 //Function to write TX address for pi ...
;void RX_Mode_Active_TX();                                                          //Function to put nRF in RX mode
;void TX_Mode_Active_TX();                                                          //Function to put nRF in TX mode
;void RF_Config_TX();                                                               //Function to config the nRF
;void RF_TX_Send_TX(data send);                                                     //Function to send data Value to RX A ...
;void RF_TX_Send_2_TX(data send);                                                   //Function to send data Value to RX a ...
;
;
;//---------------------------------RX Mode----------------------------------------------//
;unsigned char SPI_RW_RX(unsigned char Buff);                                       //Function used for text moving
;unsigned char SPI_Read_RX(void);
;void RF_Init_RX();                                                                 //Function allow to Initialize RF dev ...
;void RF_Write_RX(unsigned char Reg_Add, unsigned char Value);                      //Function to write a value to a regi ...
;void RF_Command_RX(unsigned char command);                                         //Function to write a command
;void RF_Write_Address_RX(unsigned char Address1, unsigned char Address2, unsigned char Address3, unsigned char Address4) ...
;void RX_Mode_RX();                                                          //Function to put nRF in RX mode
;void RF_Config_RX();                                                               //Function to config the nRF
;void RF_Read_RX();                                                     //Function to read the data from RX FIFO
;void RF_Write2_RX(unsigned char Reg_Add, unsigned char Value);
;void RF_Write3_RX(unsigned char Reg_Add, unsigned char Value);
;void RF_Read_RX_2();
;
;void config()
; 0000 001E {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
;CE=0;    // chip enable
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;CSN=1;   // Spi disable
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;SCK=0;   // Spi clock line init high
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;delay_us(10);
;PCODE: $00000015 VOL: 0
;RF_Write_RX(0x07,0b01111110);  // Clear flag
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;RF_Command_RX(0b11100010);     //Flush RX
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;RF_Write_TX(0x00,0b00011111);     //CONFIG 0x00
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;delay_ms(2);
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;RF_Write_TX(0x07,0b01111110);     // status
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;RF_Write_TX(0x1D, 0b00000100);
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;RF_Write_TX(0x05,0b00000010);     //RF_CH 0x05        Choose frequency channel
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;}
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;
;
;
;unsigned char SPI_RW_TX(unsigned char Buff){
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;    unsigned char bit_ctr;
;       for(bit_ctr=0;bit_ctr<8;bit_ctr++) // output 8-bit
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;	Buff -> Y+1
;	bit_ctr -> R17
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;       {
;        MOSI = (Buff & 0x80);         // output 'uchar', MSB to MOSI
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;        delay_us(5);
;PCODE: $00000048 VOL: 0
;        Buff = (Buff << 1);           // shift next bit into MSB..
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;        SCK = 1;                      // Set SCK high..
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;        delay_us(5);
;PCODE: $0000004E VOL: 0
;        Buff |= MISO;                 // capture current MISO bit
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;        SCK = 0;                      // ..then set SCK low again
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;       }
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;    return(Buff);                     // return read uchar
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;}
;PCODE: $00000060 VOL: 0
;
;void RF_Init_TX()                                                    //Function allow to Initialize RF device
;{
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;    CE=1;
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;    delay_us(700);
;PCODE: $00000065 VOL: 0
;    CE=0;
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;    CSN=1;
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;}
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;
;unsigned char RF_Write_TX(unsigned char Reg_Add, unsigned char Value)         //Function to write a value to a register  ...
;{
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;
;    CSN=0;
;PCODE: $0000006E VOL: 0
;	Reg_Add -> Y+1
;	Value -> Y+0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;    result = SPI_RW_TX(0b00100000|Reg_Add);
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;    SPI_RW_TX(Value);
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;    CSN=1;
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;    delay_us(10);
;PCODE: $0000007A VOL: 0
;    return result;
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;}
;PCODE: $0000007E VOL: 0
;
;void RF_Write_Address_TX(unsigned char Address)                      //Function to write TX and RX address
;{
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;    CSN=0;
;PCODE: $00000081 VOL: 0
;	Address -> Y+0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;    RF_Write_TX(0x03,0b00000011);
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;    CSN=1;
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;    delay_us(10);
;PCODE: $0000008A VOL: 0
;    CSN=0;
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;    SPI_RW_TX(0b00100000|0x0A);
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;    SPI_RW_TX(Address);
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;    SPI_RW_TX(Address);
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;    SPI_RW_TX(Address);
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;    SPI_RW_TX(Address);
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;    SPI_RW_TX(Address);
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;    CSN=1;
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;    delay_us(10);
;PCODE: $0000009B VOL: 0
;    CSN=0;
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;    SPI_RW_TX(0b00100000|0x10);
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;    SPI_RW_TX(Address);
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;    SPI_RW_TX(Address);
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;    SPI_RW_TX(Address);
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;    SPI_RW_TX(Address);
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;    SPI_RW_TX(Address);
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;
;    CSN=1;
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;    delay_us(10);
;PCODE: $000000AC VOL: 0
;}
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;
;void RF_Write_Address_TX_2(unsigned char Address)                      //Function to write TX and RX address
;{
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;    CSN=0;
;PCODE: $000000B2 VOL: 0
;	Address -> Y+0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;    RF_Write_TX(0x03,0b00000011);
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;    CSN=1;
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;    delay_us(10);
;PCODE: $000000BB VOL: 0
;    CSN=0;
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;    SPI_RW_TX(0b00100000|0x0A);
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;    SPI_RW_TX(Address);
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;    SPI_RW_TX(0x02);
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;    SPI_RW_TX(0x02);
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;    SPI_RW_TX(0x02);
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;    SPI_RW_TX(0x02);
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;    CSN=1;
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;    delay_us(10);
;PCODE: $000000CC VOL: 0
;    CSN=0;
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;    SPI_RW_TX(0b00100000|0x10);
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;    SPI_RW_TX(Address);
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;    SPI_RW_TX(0x02);
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;    SPI_RW_TX(0x02);
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;    SPI_RW_TX(0x02);
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;    SPI_RW_TX(0x02);
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;
;    CSN=1;
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;    delay_us(10);
;PCODE: $000000DD VOL: 0
;}
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;
;void RF_Mode_TX()                                             //Function to put nRF in TX mode
;{
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;    CE=0;
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;    RF_Write_TX(0x00,0b00011110);     //CONFIG 0x00
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;}
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;
;void RF_Config_TX()                                                  //Function to config the nRF
;{
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;
;RF_Write_TX(0x1C,0b00000001);
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;RF_Write_Address_TX(P_Add);
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;RF_Write_TX(0x02,0b00000001);     //EX_RXADDR 0x02    enable data pipe 0;
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;RF_Write_TX(0x01,0b00000001);     //EN_AA 0x01        enable auto-acknowledgment
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;}
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;
;void RF_Config_TX_2()                                                  //Function to config the nRF
;{
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;
;RF_Write_TX(0x1C,0b00000001);
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;RF_Write_Address_TX_2(P_Add);
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;RF_Write_TX(0x02,0b00000001);     //EX_RXADDR 0x02    enable data pipe 0;
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;RF_Write_TX(0x01,0b00000001);     //EN_AA 0x01        enable auto-acknowledgment
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
;}
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;
;void RF_Command_TX(unsigned char command)                            //Function to write a command
;{
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
;    CSN=0;
;PCODE: $00000111 VOL: 0
;	command -> Y+0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;    SPI_RW_TX(command);
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
;    CSN=1;
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;    delay_us(10);
;PCODE: $00000118 VOL: 0
;}
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;
;void RF_Send_TX(station_info send)     //Function to send data Value to a specify RX Address
;{
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
;
;  RF_Write_Address_TX(P_Add);
;	send -> Y+0
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;  CSN=1;
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
;  delay_us(10);
;PCODE: $00000122 VOL: 0
;  CSN=0;
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
;  SPI_RW_TX(0b11100001);
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
;  CSN=1;
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;  delay_us(10);
;PCODE: $00000129 VOL: 0
;  CSN=0;
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;  SPI_RW_TX(0b10100000);
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
;  SPI_RW_TX(send.flag);
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
;//  SPI_RW_TX(send.light);
;//  SPI_RW_TX(send.humi);
;//  SPI_RW_TX(send.temp);
;//  SPI_RW_TX(send.sm);
;  CSN=1;
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;  CE=1;
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;  delay_us(500);
;PCODE: $00000134 VOL: 0
;  CE=0;
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;  RF_Write_TX(0x07,0b01111110);
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
;  RF_Write_Address_TX(P_Add);
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
;  RF_Command_TX(0b11100001);
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
;
;  /*status = RF_Write_TX(0x07,0b00111000); //0b00111000
;  tx_ok = status & 0b00010000;
;  return tx_ok; */
;}
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
;
;void RF_Send_TX_2(data send)     //Function to send data Value to a specify RX Address
;{
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;
;  RF_Write_Address_TX_2(P_Add);
;	send -> Y+0
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
;  CSN=1;
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
;  delay_us(10);
;PCODE: $00000148 VOL: 0
;  CSN=0;
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
;  SPI_RW_TX(0b11100001);
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
;  CSN=1;
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
;  delay_us(10);
;PCODE: $0000014F VOL: 0
;  CSN=0;
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;  SPI_RW_TX(0b10100000);
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
;  SPI_RW_TX(send.flag);
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
;  SPI_RW_TX(send.a);
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
;  SPI_RW_TX(send.b);
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
;  SPI_RW_TX(send.c);
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
;  SPI_RW_TX(send.d);
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
;  CSN=1;
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
;  CE=1;
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
;  delay_us(500);
;PCODE: $0000016A VOL: 0
;  CE=0;
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
;  RF_Write_TX(0x07,0b01111110);
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
;  RF_Write_Address_TX_2(P_Add);
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
;  RF_Command_TX(0b11100001);
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
;
;  /*status = RF_Write_TX(0x07,0b00111000); //0b00111000
;  tx_ok = status & 0b00010000;
;  return tx_ok; */
;}
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
;
;
;
;//--------------------------------------------RX function------------------------------------//
;unsigned char SPI_RW_RX(unsigned char Buff)
;{
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
;    unsigned char bit_ctr;
;       for(bit_ctr=0;bit_ctr<8;bit_ctr++) // output 8-bit
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
;	Buff -> Y+1
;	bit_ctr -> R17
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
;       {
;        MOSI = (Buff & 0x80);         // output 'uchar', MSB to MOSI
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
;        delay_us(5);
;PCODE: $0000018F VOL: 0
;        Buff = (Buff << 1);           // shift next bit into MSB..
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
;        SCK = 1;                      // Set SCK high..
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
;        delay_us(5);
;PCODE: $00000195 VOL: 0
;        Buff |= MISO;                 // capture current MISO bit
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
;        SCK = 0;                      // ..then set SCK low again
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
;       }
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
;    return(Buff);                     // return read uchar
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
;}
;PCODE: $000001A7 VOL: 0
;
;unsigned char SPI_Read_RX(void)
;{   unsigned char Buff=0;
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
;    unsigned char bit_ctr;
;       for(bit_ctr=0;bit_ctr<8;bit_ctr++) // output 8-bit
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
;	Buff -> R17
;	bit_ctr -> R16
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
;PCODE: $000001AE VOL: 0
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
;       {
;        delay_us(5);
;PCODE: $000001B7 VOL: 0
;        Buff = (Buff << 1);           // shift next bit into MSB..
;PCODE: $000001B8 VOL: 0
;        SCK = 1;                      // Set SCK high..
;PCODE: $000001B9 VOL: 0
;PCODE: $000001BA VOL: 0
;        delay_us(5);
;PCODE: $000001BB VOL: 0
;        Buff |= MISO;                 // capture current MISO bit
;PCODE: $000001BC VOL: 0
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
;PCODE: $000001BF VOL: 0
;        SCK = 0;                      // ..then set SCK low again
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
;       }
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
;PCODE: $000001C6 VOL: 0
;    return(Buff);                     // return read uchar
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
;}
;PCODE: $000001CA VOL: 0
;
;void RF_Init_RX()                                                    //Function allow to Initialize RF device
;{
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
;    CE=1;
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
;    delay_us(700);
;PCODE: $000001CF VOL: 0
;    CE=0;
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
;    CSN=1;
;PCODE: $000001D2 VOL: 0
;PCODE: $000001D3 VOL: 0
;}
;PCODE: $000001D4 VOL: 0
;PCODE: $000001D5 VOL: 0
;
;void RF_Write_RX(unsigned char Reg_Add, unsigned char Value)         //Function to write a value to a register address
;{
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
;    CSN=0;
;PCODE: $000001D8 VOL: 0
;	Reg_Add -> Y+1
;	Value -> Y+0
;PCODE: $000001D9 VOL: 0
;PCODE: $000001DA VOL: 0
;    SPI_RW_RX(0b00100000|Reg_Add);
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
;PCODE: $000001DE VOL: 0
;    SPI_RW_RX(Value);
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
;    CSN=1;
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
;    delay_us(10);
;PCODE: $000001E3 VOL: 0
;}
;PCODE: $000001E4 VOL: 0
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
;
;void RF_Write2_RX(unsigned char Reg_Add, unsigned char Value)         //Function to write a value to a register address
;{
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
;    CSN=0;
;PCODE: $000001E9 VOL: 0
;	Reg_Add -> Y+1
;	Value -> Y+0
;PCODE: $000001EA VOL: 0
;PCODE: $000001EB VOL: 0
;    SPI_RW_RX(0b00100000|Reg_Add);
;PCODE: $000001EC VOL: 0
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
;PCODE: $000001EF VOL: 0
;    SPI_RW_RX(Value);
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
;    SPI_RW_RX(Value);
;PCODE: $000001F2 VOL: 0
;PCODE: $000001F3 VOL: 0
;    SPI_RW_RX(Value);
;PCODE: $000001F4 VOL: 0
;PCODE: $000001F5 VOL: 0
;    SPI_RW_RX(Value);
;PCODE: $000001F6 VOL: 0
;PCODE: $000001F7 VOL: 0
;    SPI_RW_RX(Value);
;PCODE: $000001F8 VOL: 0
;PCODE: $000001F9 VOL: 0
;    CSN=1;
;PCODE: $000001FA VOL: 0
;PCODE: $000001FB VOL: 0
;    delay_us(10);
;PCODE: $000001FC VOL: 0
;}
;PCODE: $000001FD VOL: 0
;PCODE: $000001FE VOL: 0
;PCODE: $000001FF VOL: 0
;
;void RF_Write3_RX(unsigned char Reg_Add, unsigned char Value)         //Function to write a value to a register address
;{
;PCODE: $00000200 VOL: 0
;PCODE: $00000201 VOL: 0
;    CSN=0;
;PCODE: $00000202 VOL: 0
;	Reg_Add -> Y+1
;	Value -> Y+0
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
;    SPI_RW_RX(0b00100000|Reg_Add);
;PCODE: $00000205 VOL: 0
;PCODE: $00000206 VOL: 0
;PCODE: $00000207 VOL: 0
;PCODE: $00000208 VOL: 0
;    SPI_RW_RX(Code_tay_cam2);
;PCODE: $00000209 VOL: 0
;PCODE: $0000020A VOL: 0
;    SPI_RW_RX(Code_tay_cam2);
;PCODE: $0000020B VOL: 0
;PCODE: $0000020C VOL: 0
;    SPI_RW_RX(Code_tay_cam2);
;PCODE: $0000020D VOL: 0
;PCODE: $0000020E VOL: 0
;    SPI_RW_RX(Code_tay_cam2);
;PCODE: $0000020F VOL: 0
;PCODE: $00000210 VOL: 0
;    SPI_RW_RX(Value);
;PCODE: $00000211 VOL: 0
;PCODE: $00000212 VOL: 0
;
;
;    CSN=1;
;PCODE: $00000213 VOL: 0
;PCODE: $00000214 VOL: 0
;    delay_us(10);
;PCODE: $00000215 VOL: 0
;}
;PCODE: $00000216 VOL: 0
;PCODE: $00000217 VOL: 0
;PCODE: $00000218 VOL: 0
;
;void RF_Command_RX(unsigned char command)                            //Function to write a command
;{
;PCODE: $00000219 VOL: 0
;PCODE: $0000021A VOL: 0
;    CSN=0;
;PCODE: $0000021B VOL: 0
;	command -> Y+0
;PCODE: $0000021C VOL: 0
;PCODE: $0000021D VOL: 0
;    SPI_RW_RX(command);
;PCODE: $0000021E VOL: 0
;PCODE: $0000021F VOL: 0
;    CSN=1;
;PCODE: $00000220 VOL: 0
;PCODE: $00000221 VOL: 0
;    delay_us(10);
;PCODE: $00000222 VOL: 0
;}
;PCODE: $00000223 VOL: 0
;PCODE: $00000224 VOL: 0
;PCODE: $00000225 VOL: 0
;
;void RF_Write_Address_RX(unsigned char Address1, unsigned char Address2, unsigned char Address3, unsigned char Address4) ...
;{
;PCODE: $00000226 VOL: 0
;PCODE: $00000227 VOL: 0
;    CSN=0;
;PCODE: $00000228 VOL: 0
;	Address1 -> Y+3
;	Address2 -> Y+2
;	Address3 -> Y+1
;	Address4 -> Y+0
;PCODE: $00000229 VOL: 0
;PCODE: $0000022A VOL: 0
;    RF_Write_RX(0x03,0b00000011);
;PCODE: $0000022B VOL: 0
;PCODE: $0000022C VOL: 0
;PCODE: $0000022D VOL: 0
;PCODE: $0000022E VOL: 0
;    CSN=1;
;PCODE: $0000022F VOL: 0
;PCODE: $00000230 VOL: 0
;    delay_us(10);
;PCODE: $00000231 VOL: 0
;    CSN=0;
;PCODE: $00000232 VOL: 0
;PCODE: $00000233 VOL: 0
;    RF_Write2_RX(0x0A, Address1);
;PCODE: $00000234 VOL: 0
;PCODE: $00000235 VOL: 0
;PCODE: $00000236 VOL: 0
;PCODE: $00000237 VOL: 0
;    RF_Write2_RX(0x10, Address1);
;PCODE: $00000238 VOL: 0
;PCODE: $00000239 VOL: 0
;PCODE: $0000023A VOL: 0
;PCODE: $0000023B VOL: 0
;
;    RF_Write3_RX(0x0B, Address2);
;PCODE: $0000023C VOL: 0
;PCODE: $0000023D VOL: 0
;PCODE: $0000023E VOL: 0
;PCODE: $0000023F VOL: 0
;    RF_Write3_RX(0x10, Address2);
;PCODE: $00000240 VOL: 0
;PCODE: $00000241 VOL: 0
;PCODE: $00000242 VOL: 0
;PCODE: $00000243 VOL: 0
;
;    RF_Write3_RX(0x0C, Address3);
;PCODE: $00000244 VOL: 0
;PCODE: $00000245 VOL: 0
;PCODE: $00000246 VOL: 0
;PCODE: $00000247 VOL: 0
;    RF_Write3_RX(0x10, Address3);
;PCODE: $00000248 VOL: 0
;PCODE: $00000249 VOL: 0
;PCODE: $0000024A VOL: 0
;PCODE: $0000024B VOL: 0
;
;    RF_Write3_RX(0x0D, Address4);
;PCODE: $0000024C VOL: 0
;PCODE: $0000024D VOL: 0
;PCODE: $0000024E VOL: 0
;PCODE: $0000024F VOL: 0
;    RF_Write3_RX(0x10, Address4);
;PCODE: $00000250 VOL: 0
;PCODE: $00000251 VOL: 0
;PCODE: $00000252 VOL: 0
;PCODE: $00000253 VOL: 0
;
;}
;PCODE: $00000254 VOL: 0
;PCODE: $00000255 VOL: 0
;PCODE: $00000256 VOL: 0
;
;void RF_Write_Address_RX_2(unsigned char Address1){
;PCODE: $00000257 VOL: 0
;PCODE: $00000258 VOL: 0
;    CSN=0;
;PCODE: $00000259 VOL: 0
;	Address1 -> Y+0
;PCODE: $0000025A VOL: 0
;PCODE: $0000025B VOL: 0
;    RF_Write_RX(0x03,0b00000011);
;PCODE: $0000025C VOL: 0
;PCODE: $0000025D VOL: 0
;PCODE: $0000025E VOL: 0
;PCODE: $0000025F VOL: 0
;    CSN=1;
;PCODE: $00000260 VOL: 0
;PCODE: $00000261 VOL: 0
;    delay_us(10);
;PCODE: $00000262 VOL: 0
;    CSN=0;
;PCODE: $00000263 VOL: 0
;PCODE: $00000264 VOL: 0
;
;    RF_Write2_RX(0x0A, Address1);
;PCODE: $00000265 VOL: 0
;PCODE: $00000266 VOL: 0
;PCODE: $00000267 VOL: 0
;PCODE: $00000268 VOL: 0
;    RF_Write2_RX(0x10, Address1);
;PCODE: $00000269 VOL: 0
;PCODE: $0000026A VOL: 0
;PCODE: $0000026B VOL: 0
;PCODE: $0000026C VOL: 0
;}
;PCODE: $0000026D VOL: 0
;PCODE: $0000026E VOL: 0
;PCODE: $0000026F VOL: 0
;
;
;void RF_Mode_RX()                                             //Function to put nRF in RX mode
;{
;PCODE: $00000270 VOL: 0
;PCODE: $00000271 VOL: 0
;    RF_Write_RX(0x00,0b00011111);     //CONFIG 0x00
;PCODE: $00000272 VOL: 0
;PCODE: $00000273 VOL: 0
;PCODE: $00000274 VOL: 0
;PCODE: $00000275 VOL: 0
;    CE=1;
;PCODE: $00000276 VOL: 0
;PCODE: $00000277 VOL: 0
;}
;PCODE: $00000278 VOL: 0
;PCODE: $00000279 VOL: 0
;
;void RF_Config_RX()                                                  //Function to config the nRF
;{
;PCODE: $0000027A VOL: 0
;PCODE: $0000027B VOL: 0
;RF_Write_RX(0x1C,0b00001111);
;PCODE: $0000027C VOL: 0
;PCODE: $0000027D VOL: 0
;PCODE: $0000027E VOL: 0
;PCODE: $0000027F VOL: 0
;RF_Write_Address_RX(Code_tay_cam1, Code_tay_cam2, Code_tay_cam3, Code_tay_cam4);
;PCODE: $00000280 VOL: 0
;PCODE: $00000281 VOL: 0
;PCODE: $00000282 VOL: 0
;PCODE: $00000283 VOL: 0
;PCODE: $00000284 VOL: 0
;RF_Write_RX(0x02,0b00001111);     //EX_RXADDR 0x02    enable data pipe 0;
;PCODE: $00000285 VOL: 0
;PCODE: $00000286 VOL: 0
;PCODE: $00000287 VOL: 0
;PCODE: $00000288 VOL: 0
;RF_Write_RX(0x01,0b00001111);     //EN_AA 0x01        enable auto-acknowledgment
;PCODE: $00000289 VOL: 0
;PCODE: $0000028A VOL: 0
;PCODE: $0000028B VOL: 0
;PCODE: $0000028C VOL: 0
;}
;PCODE: $0000028D VOL: 0
;PCODE: $0000028E VOL: 0
;
;void RF_Config_RX_2(){
;PCODE: $0000028F VOL: 0
;PCODE: $00000290 VOL: 0
;    RF_Write_RX(0x1C,0b00001111);
;PCODE: $00000291 VOL: 0
;PCODE: $00000292 VOL: 0
;PCODE: $00000293 VOL: 0
;PCODE: $00000294 VOL: 0
;    RF_Write_Address_RX_2(Code_tay_cam1);
;PCODE: $00000295 VOL: 0
;PCODE: $00000296 VOL: 0
;    RF_Write_RX(0x02,0b00000001);     //EX_RXADDR 0x02    enable data pipe 0;
;PCODE: $00000297 VOL: 0
;PCODE: $00000298 VOL: 0
;PCODE: $00000299 VOL: 0
;PCODE: $0000029A VOL: 0
;    RF_Write_RX(0x01,0b00000001);     //EN_AA 0x01        enable auto-acknowledgment
;PCODE: $0000029B VOL: 0
;PCODE: $0000029C VOL: 0
;PCODE: $0000029D VOL: 0
;PCODE: $0000029E VOL: 0
;}
;PCODE: $0000029F VOL: 0
;PCODE: $000002A0 VOL: 0
;
;void RF_Config_RX_3(){
;PCODE: $000002A1 VOL: 0
;PCODE: $000002A2 VOL: 0
;RF_Write_RX(0x11,0b00000001);     //RX_PW_P0 0x11     Payload size
;PCODE: $000002A3 VOL: 0
;PCODE: $000002A4 VOL: 0
;PCODE: $000002A5 VOL: 0
;PCODE: $000002A6 VOL: 0
;RF_Write_Address_RX_2(Code_tay_cam1);
;PCODE: $000002A7 VOL: 0
;PCODE: $000002A8 VOL: 0
;RF_Write_RX(0x02,0b00000001);     //EX_RXADDR 0x02    enable data pipe 0;
;PCODE: $000002A9 VOL: 0
;PCODE: $000002AA VOL: 0
;PCODE: $000002AB VOL: 0
;PCODE: $000002AC VOL: 0
;RF_Write_RX(0x01,0b00000001);     //EN_AA 0x01        enable auto-acknowledgment
;PCODE: $000002AD VOL: 0
;PCODE: $000002AE VOL: 0
;PCODE: $000002AF VOL: 0
;PCODE: $000002B0 VOL: 0
;RF_Write_RX(0x04,0b00000000);     //SETUP_RETR 0x04   Setup retry time
;PCODE: $000002B1 VOL: 0
;PCODE: $000002B2 VOL: 0
;PCODE: $000002B3 VOL: 0
;PCODE: $000002B4 VOL: 0
;}
;PCODE: $000002B5 VOL: 0
;PCODE: $000002B6 VOL: 0
;
;void RF_Read_RX()                                         //Function to read the data from RX FIFO
;{
;PCODE: $000002B7 VOL: 0
;PCODE: $000002B8 VOL: 0
;   CE=0;
;PCODE: $000002B9 VOL: 0
;PCODE: $000002BA VOL: 0
;   CSN=1;
;PCODE: $000002BB VOL: 0
;PCODE: $000002BC VOL: 0
;   delay_us(10);
;PCODE: $000002BD VOL: 0
;   CSN=0;
;PCODE: $000002BE VOL: 0
;PCODE: $000002BF VOL: 0
;   SPI_RW_RX(0b01100001);
;PCODE: $000002C0 VOL: 0
;PCODE: $000002C1 VOL: 0
;   delay_us(10);
;PCODE: $000002C2 VOL: 0
;   data_receive.flag = SPI_Read_RX();
;PCODE: $000002C3 VOL: 0
;PCODE: $000002C4 VOL: 0
;PCODE: $000002C5 VOL: 0
;   data_receive.a = SPI_Read_RX();
;PCODE: $000002C6 VOL: 0
;PCODE: $000002C7 VOL: 0
;PCODE: $000002C8 VOL: 0
;PCODE: $000002C9 VOL: 0
;PCODE: $000002CA VOL: 0
;   data_receive.b = SPI_Read_RX();
;PCODE: $000002CB VOL: 0
;PCODE: $000002CC VOL: 0
;PCODE: $000002CD VOL: 0
;PCODE: $000002CE VOL: 0
;PCODE: $000002CF VOL: 0
;   data_receive.c = SPI_Read_RX();
;PCODE: $000002D0 VOL: 0
;PCODE: $000002D1 VOL: 0
;PCODE: $000002D2 VOL: 0
;PCODE: $000002D3 VOL: 0
;PCODE: $000002D4 VOL: 0
;   data_receive.d = SPI_Read_RX();
;PCODE: $000002D5 VOL: 0
;PCODE: $000002D6 VOL: 0
;PCODE: $000002D7 VOL: 0
;PCODE: $000002D8 VOL: 0
;PCODE: $000002D9 VOL: 0
;   CSN=1;
;PCODE: $000002DA VOL: 0
;PCODE: $000002DB VOL: 0
;   CE=1;
;PCODE: $000002DC VOL: 0
;PCODE: $000002DD VOL: 0
;   RF_Write_RX(0x07,0b01111110);  // Clear flag
;PCODE: $000002DE VOL: 0
;PCODE: $000002DF VOL: 0
;PCODE: $000002E0 VOL: 0
;PCODE: $000002E1 VOL: 0
;   RF_Command_RX(0b11100010);     //Flush RX
;PCODE: $000002E2 VOL: 0
;PCODE: $000002E3 VOL: 0
;}
;PCODE: $000002E4 VOL: 0
;PCODE: $000002E5 VOL: 0
;
;void RF_Read_RX_2(){
;PCODE: $000002E6 VOL: 0
;PCODE: $000002E7 VOL: 0
;    CE=0;
;PCODE: $000002E8 VOL: 0
;PCODE: $000002E9 VOL: 0
;    CSN=1;
;PCODE: $000002EA VOL: 0
;PCODE: $000002EB VOL: 0
;    delay_us(10);
;PCODE: $000002EC VOL: 0
;    CSN=0;
;PCODE: $000002ED VOL: 0
;PCODE: $000002EE VOL: 0
;    SPI_RW_RX(0b01100001);
;PCODE: $000002EF VOL: 0
;PCODE: $000002F0 VOL: 0
;    delay_us(10);
;PCODE: $000002F1 VOL: 0
;    tay_cam_receive.analog_l = SPI_Read_RX();
;PCODE: $000002F2 VOL: 0
;PCODE: $000002F3 VOL: 0
;PCODE: $000002F4 VOL: 0
;    tay_cam_receive.analog_r = SPI_Read_RX();
;PCODE: $000002F5 VOL: 0
;PCODE: $000002F6 VOL: 0
;PCODE: $000002F7 VOL: 0
;PCODE: $000002F8 VOL: 0
;PCODE: $000002F9 VOL: 0
;    tay_cam_receive.digital_l = SPI_Read_RX();
;PCODE: $000002FA VOL: 0
;PCODE: $000002FB VOL: 0
;PCODE: $000002FC VOL: 0
;PCODE: $000002FD VOL: 0
;PCODE: $000002FE VOL: 0
;    tay_cam_receive.digital_r = SPI_Read_RX();
;PCODE: $000002FF VOL: 0
;PCODE: $00000300 VOL: 0
;PCODE: $00000301 VOL: 0
;PCODE: $00000302 VOL: 0
;PCODE: $00000303 VOL: 0
;    CSN=1;
;PCODE: $00000304 VOL: 0
;PCODE: $00000305 VOL: 0
;    CE=1;
;PCODE: $00000306 VOL: 0
;PCODE: $00000307 VOL: 0
;    RF_Write_RX(0x07,0b01111110);  // Clear flag
;PCODE: $00000308 VOL: 0
;PCODE: $00000309 VOL: 0
;PCODE: $0000030A VOL: 0
;PCODE: $0000030B VOL: 0
;    RF_Command_RX(0b11100010);     //Flush RX
;PCODE: $0000030C VOL: 0
;PCODE: $0000030D VOL: 0
;}
;PCODE: $0000030E VOL: 0
;PCODE: $0000030F VOL: 0
;
;void RF_Read_RX_3()                                         //Function to read the data from RX FIFO
;{
;PCODE: $00000310 VOL: 0
;PCODE: $00000311 VOL: 0
;   CE=0;
;PCODE: $00000312 VOL: 0
;PCODE: $00000313 VOL: 0
;   CSN=1;
;PCODE: $00000314 VOL: 0
;PCODE: $00000315 VOL: 0
;   delay_us(10);
;PCODE: $00000316 VOL: 0
;   CSN=0;
;PCODE: $00000317 VOL: 0
;PCODE: $00000318 VOL: 0
;   SPI_RW_RX(0b01100001);
;PCODE: $00000319 VOL: 0
;PCODE: $0000031A VOL: 0
;   delay_us(10);
;PCODE: $0000031B VOL: 0
;   station_receive.flag = SPI_Read_RX();
;PCODE: $0000031C VOL: 0
;PCODE: $0000031D VOL: 0
;PCODE: $0000031E VOL: 0
;   station_receive.light = SPI_Read_RX();
;PCODE: $0000031F VOL: 0
;PCODE: $00000320 VOL: 0
;PCODE: $00000321 VOL: 0
;PCODE: $00000322 VOL: 0
;PCODE: $00000323 VOL: 0
;   station_receive.humi = SPI_Read_RX();
;PCODE: $00000324 VOL: 0
;PCODE: $00000325 VOL: 0
;PCODE: $00000326 VOL: 0
;PCODE: $00000327 VOL: 0
;PCODE: $00000328 VOL: 0
;   station_receive.temp = SPI_Read_RX();
;PCODE: $00000329 VOL: 0
;PCODE: $0000032A VOL: 0
;PCODE: $0000032B VOL: 0
;PCODE: $0000032C VOL: 0
;PCODE: $0000032D VOL: 0
;   station_receive.sm = SPI_Read_RX();
;PCODE: $0000032E VOL: 0
;PCODE: $0000032F VOL: 0
;PCODE: $00000330 VOL: 0
;PCODE: $00000331 VOL: 0
;PCODE: $00000332 VOL: 0
;   CSN=1;
;PCODE: $00000333 VOL: 0
;PCODE: $00000334 VOL: 0
;   CE=1;
;PCODE: $00000335 VOL: 0
;PCODE: $00000336 VOL: 0
;   RF_Write_RX(0x07,0b01111110);  // Clear flag
;PCODE: $00000337 VOL: 0
;PCODE: $00000338 VOL: 0
;PCODE: $00000339 VOL: 0
;PCODE: $0000033A VOL: 0
;   RF_Command_RX(0b11100010);     //Flush RX
;PCODE: $0000033B VOL: 0
;PCODE: $0000033C VOL: 0
;}
;PCODE: $0000033D VOL: 0
;PCODE: $0000033E VOL: 0
;#include <stdio.h>
;#include <stdlib.h>
;#include <big_letter_10x14.c>
;/****************************************************************************
;Font created by the LCD Vision V1.05 font & image editor/converter
;(C) Copyright 2011-2013 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Font name: big_letter_10x14
;The font is proportional (has variable width).
;Font height: 14 pixels
;First character: 0x20
;Last character: 0x7F
;
;Exported font data size:
;2788 bytes for displays organized as horizontal rows of bytes
;2016 bytes for displays organized as rows of vertical bytes.
;****************************************************************************/
;
;flash unsigned char big_letter_10x14[]=
;{
;0x00, /* Proportional font */
;0x0E, /* Font height */
;0x20, /* First character */
;0x60, /* Number of characters in font */
;
;/* Character widths */
;0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A,
;0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A,
;0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A,
;0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A,
;0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A,
;0x0A, 0x0A, 0x0A, 0x0A, 0x09, 0x0A, 0x0A, 0x0A,
;0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A,
;0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A,
;0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A,
;0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A,
;0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x09, 0x0A,
;0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A,
;
;#ifndef _GLCD_DATA_BYTEY_
;/* Font data for displays organized as
;   horizontal rows of bytes */
;
;/* Code: 0x20, ASCII Character: ' ' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x21, ASCII Character: '!' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x22, ASCII Character: '"' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x23, ASCII Character: '#' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x24, ASCII Character: '$' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x25, ASCII Character: '%' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x26, ASCII Character: '&' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x27, ASCII Character: ''' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x28, ASCII Character: '(' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x29, ASCII Character: ')' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x2A, ASCII Character: '*' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x2B, ASCII Character: '+' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x2C, ASCII Character: ',' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x2D, ASCII Character: '-' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x2E, ASCII Character: '.' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x2F, ASCII Character: '/' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x30, ASCII Character: '0' */
;0x78, 0x00, 0xFC, 0x00, 0x86, 0x01, 0x86, 0x01,
;0x86, 0x01, 0x86, 0x01, 0x86, 0x01, 0x86, 0x01,
;0x86, 0x01, 0x86, 0x01, 0x86, 0x01, 0x86, 0x01,
;0xFC, 0x00, 0x78, 0x00,
;
;/* Code: 0x31, ASCII Character: '1' */
;0x30, 0x00, 0x38, 0x00, 0x3C, 0x00, 0x36, 0x00,
;0x32, 0x00, 0x30, 0x00, 0x30, 0x00, 0x30, 0x00,
;0x30, 0x00, 0x30, 0x00, 0x30, 0x00, 0x30, 0x00,
;0xFE, 0x01, 0xFE, 0x01,
;
;/* Code: 0x32, ASCII Character: '2' */
;0x78, 0x00, 0xFC, 0x00, 0x86, 0x01, 0x86, 0x01,
;0x80, 0x01, 0x80, 0x01, 0xC0, 0x00, 0x60, 0x00,
;0x30, 0x00, 0x18, 0x00, 0x0C, 0x00, 0x06, 0x00,
;0xFE, 0x01, 0xFE, 0x01,
;
;/* Code: 0x33, ASCII Character: '3' */
;0x78, 0x00, 0xFC, 0x00, 0x86, 0x01, 0x86, 0x01,
;0x80, 0x01, 0x80, 0x01, 0xF8, 0x00, 0xF8, 0x00,
;0x80, 0x01, 0x80, 0x01, 0x86, 0x01, 0x86, 0x01,
;0xFC, 0x00, 0x78, 0x00,
;
;/* Code: 0x34, ASCII Character: '4' */
;0x80, 0x01, 0xC0, 0x01, 0xE0, 0x01, 0xB0, 0x01,
;0x98, 0x01, 0x8C, 0x01, 0x86, 0x01, 0xFE, 0x03,
;0xFE, 0x03, 0x80, 0x01, 0x80, 0x01, 0x80, 0x01,
;0x80, 0x01, 0x80, 0x01,
;
;/* Code: 0x35, ASCII Character: '5' */
;0xFE, 0x01, 0xFE, 0x01, 0x06, 0x00, 0x06, 0x00,
;0x06, 0x00, 0x06, 0x00, 0x7E, 0x00, 0xFE, 0x00,
;0x80, 0x01, 0x80, 0x01, 0x80, 0x01, 0x80, 0x01,
;0xFE, 0x00, 0x7E, 0x00,
;
;/* Code: 0x36, ASCII Character: '6' */
;0x78, 0x00, 0xFC, 0x00, 0x86, 0x01, 0x86, 0x01,
;0x06, 0x00, 0x06, 0x00, 0x7E, 0x00, 0xFE, 0x00,
;0x86, 0x01, 0x86, 0x01, 0x86, 0x01, 0x86, 0x01,
;0xFC, 0x00, 0x78, 0x00,
;
;/* Code: 0x37, ASCII Character: '7' */
;0xFE, 0x01, 0xFE, 0x01, 0x80, 0x01, 0x80, 0x01,
;0xC0, 0x00, 0xC0, 0x00, 0x60, 0x00, 0x60, 0x00,
;0x60, 0x00, 0x70, 0x00, 0x30, 0x00, 0x30, 0x00,
;0x30, 0x00, 0x30, 0x00,
;
;/* Code: 0x38, ASCII Character: '8' */
;0x78, 0x00, 0xFC, 0x00, 0x86, 0x01, 0x86, 0x01,
;0x86, 0x01, 0x86, 0x01, 0xFC, 0x00, 0xFC, 0x00,
;0x86, 0x01, 0x86, 0x01, 0x86, 0x01, 0x86, 0x01,
;0xFC, 0x00, 0x78, 0x00,
;
;/* Code: 0x39, ASCII Character: '9' */
;0x78, 0x00, 0xFC, 0x00, 0x86, 0x01, 0x86, 0x01,
;0x86, 0x01, 0x86, 0x01, 0xFE, 0x01, 0xFC, 0x01,
;0x80, 0x01, 0x80, 0x01, 0x86, 0x01, 0x86, 0x01,
;0xFC, 0x00, 0x78, 0x00,
;
;/* Code: 0x3A, ASCII Character: ':' */
;0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x78, 0x00,
;0x78, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x30, 0x00, 0x78, 0x00, 0x78, 0x00, 0x30, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x3B, ASCII Character: ';' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x3C, ASCII Character: '<' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x3D, ASCII Character: '=' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x3E, ASCII Character: '>' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x3F, ASCII Character: '?' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x40, ASCII Character: '@' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x41, ASCII Character: 'A' */
;0xFC, 0x00, 0xFE, 0x01, 0x03, 0x03, 0x03, 0x03,
;0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0xFF, 0x03,
;0xFF, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03,
;0x03, 0x03, 0x03, 0x03,
;
;/* Code: 0x42, ASCII Character: 'B' */
;0xFF, 0x00, 0xFF, 0x01, 0x03, 0x03, 0x03, 0x03,
;0x03, 0x03, 0x03, 0x03, 0xFF, 0x01, 0xFF, 0x01,
;0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03,
;0xFF, 0x01, 0xFF, 0x00,
;
;/* Code: 0x43, ASCII Character: 'C' */
;0xF8, 0x00, 0xFC, 0x01, 0x06, 0x03, 0x03, 0x03,
;0x03, 0x00, 0x03, 0x00, 0x03, 0x00, 0x03, 0x00,
;0x03, 0x00, 0x03, 0x00, 0x03, 0x03, 0x06, 0x03,
;0xFC, 0x01, 0xF8, 0x00,
;
;/* Code: 0x44, ASCII Character: 'D' */
;0x7F, 0x00, 0xFF, 0x00, 0x83, 0x01, 0x03, 0x03,
;0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03,
;0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x83, 0x01,
;0xFF, 0x00, 0x7F, 0x00,
;
;/* Code: 0x45, ASCII Character: 'E' */
;0xFF, 0x03, 0xFF, 0x03, 0x03, 0x00, 0x03, 0x00,
;0x03, 0x00, 0x03, 0x00, 0xFF, 0x01, 0xFF, 0x01,
;0x03, 0x00, 0x03, 0x00, 0x03, 0x00, 0x03, 0x00,
;0xFF, 0x03, 0xFF, 0x03,
;
;/* Code: 0x46, ASCII Character: 'F' */
;0xFF, 0x03, 0xFF, 0x03, 0x03, 0x00, 0x03, 0x00,
;0x03, 0x00, 0x03, 0x00, 0xFF, 0x00, 0xFF, 0x00,
;0x03, 0x00, 0x03, 0x00, 0x03, 0x00, 0x03, 0x00,
;0x03, 0x00, 0x03, 0x00,
;
;/* Code: 0x47, ASCII Character: 'G' */
;0xF8, 0x00, 0xFC, 0x01, 0x06, 0x03, 0x03, 0x03,
;0x03, 0x00, 0x03, 0x00, 0x03, 0x00, 0xC3, 0x03,
;0xC3, 0x03, 0x03, 0x03, 0x03, 0x03, 0x06, 0x03,
;0xFC, 0x01, 0xF8, 0x00,
;
;/* Code: 0x48, ASCII Character: 'H' */
;0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03,
;0x03, 0x03, 0x03, 0x03, 0xFF, 0x03, 0xFF, 0x03,
;0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03,
;0x03, 0x03, 0x03, 0x03,
;
;/* Code: 0x49, ASCII Character: 'I' */
;0xFC, 0x00, 0xFC, 0x00, 0x30, 0x00, 0x30, 0x00,
;0x30, 0x00, 0x30, 0x00, 0x30, 0x00, 0x30, 0x00,
;0x30, 0x00, 0x30, 0x00, 0x30, 0x00, 0x30, 0x00,
;0xFC, 0x00, 0xFC, 0x00,
;
;/* Code: 0x4A, ASCII Character: 'J' */
;0xF8, 0x01, 0xF8, 0x01, 0x60, 0x00, 0x60, 0x00,
;0x60, 0x00, 0x60, 0x00, 0x60, 0x00, 0x60, 0x00,
;0x60, 0x00, 0x60, 0x00, 0x63, 0x00, 0x63, 0x00,
;0x3E, 0x00, 0x1C, 0x00,
;
;/* Code: 0x4B, ASCII Character: 'K' */
;0x03, 0x03, 0x83, 0x01, 0xC3, 0x00, 0x63, 0x00,
;0x33, 0x00, 0x1B, 0x00, 0x0F, 0x00, 0x0F, 0x00,
;0x1B, 0x00, 0x33, 0x00, 0x63, 0x00, 0xC3, 0x00,
;0x83, 0x01, 0x03, 0x03,
;
;/* Code: 0x4C, ASCII Character: 'L' */
;0x03, 0x00, 0x03, 0x00, 0x03, 0x00, 0x03, 0x00,
;0x03, 0x00, 0x03, 0x00, 0x03, 0x00, 0x03, 0x00,
;0x03, 0x00, 0x03, 0x00, 0x03, 0x00, 0x03, 0x00,
;0xFF, 0x01, 0xFF, 0x01,
;
;/* Code: 0x4D, ASCII Character: 'M' */
;0x03, 0x03, 0x03, 0x03, 0x87, 0x03, 0x87, 0x03,
;0xCF, 0x03, 0x4B, 0x03, 0x7B, 0x03, 0x33, 0x03,
;0x33, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03,
;0x03, 0x03, 0x03, 0x03,
;
;/* Code: 0x4E, ASCII Character: 'N' */
;0x03, 0x03, 0x07, 0x03, 0x07, 0x03, 0x0F, 0x03,
;0x0B, 0x03, 0x1B, 0x03, 0x13, 0x03, 0x33, 0x03,
;0x23, 0x03, 0x63, 0x03, 0x43, 0x03, 0xC3, 0x03,
;0x83, 0x03, 0x03, 0x03,
;
;/* Code: 0x4F, ASCII Character: 'O' */
;0x78, 0x00, 0xFC, 0x00, 0x86, 0x01, 0x03, 0x03,
;0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03,
;0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x86, 0x01,
;0xFC, 0x00, 0x78, 0x00,
;
;/* Code: 0x50, ASCII Character: 'P' */
;0xFF, 0x00, 0xFF, 0x01, 0x83, 0x03, 0x03, 0x03,
;0x03, 0x03, 0x03, 0x03, 0x83, 0x03, 0xFF, 0x01,
;0xFF, 0x00, 0x03, 0x00, 0x03, 0x00, 0x03, 0x00,
;0x03, 0x00, 0x03, 0x00,
;
;/* Code: 0x51, ASCII Character: 'Q' */
;0x78, 0x00, 0xFC, 0x00, 0x86, 0x01, 0x03, 0x03,
;0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03,
;0x03, 0x03, 0x03, 0x03, 0x63, 0x03, 0xC6, 0x01,
;0xFC, 0x01, 0x78, 0x03,
;
;/* Code: 0x52, ASCII Character: 'R' */
;0x7F, 0x00, 0xFF, 0x00, 0xC3, 0x01, 0x83, 0x01,
;0x83, 0x01, 0xC3, 0x01, 0xFF, 0x00, 0x7F, 0x00,
;0x1F, 0x00, 0x3B, 0x00, 0x73, 0x00, 0xE3, 0x00,
;0xC3, 0x01, 0x83, 0x03,
;
;/* Code: 0x53, ASCII Character: 'S' */
;0xFC, 0x00, 0xFE, 0x01, 0x03, 0x03, 0x03, 0x03,
;0x03, 0x00, 0x03, 0x00, 0xFE, 0x00, 0xFC, 0x01,
;0x00, 0x03, 0x00, 0x03, 0x03, 0x03, 0x03, 0x03,
;0xFE, 0x01, 0xFC, 0x00,
;
;/* Code: 0x54, ASCII Character: 'T' */
;0xFF, 0x03, 0xFF, 0x03, 0x30, 0x00, 0x30, 0x00,
;0x30, 0x00, 0x30, 0x00, 0x30, 0x00, 0x30, 0x00,
;0x30, 0x00, 0x30, 0x00, 0x30, 0x00, 0x30, 0x00,
;0x30, 0x00, 0x30, 0x00,
;
;/* Code: 0x55, ASCII Character: 'U' */
;0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03,
;0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03,
;0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03,
;0xFE, 0x01, 0xFC, 0x00,
;
;/* Code: 0x56, ASCII Character: 'V' */
;0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03,
;0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03,
;0x03, 0x03, 0x03, 0x03, 0x86, 0x01, 0xCC, 0x00,
;0x78, 0x00, 0x30, 0x00,
;
;/* Code: 0x57, ASCII Character: 'W' */
;0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03,
;0x03, 0x03, 0x33, 0x03, 0x33, 0x03, 0x7B, 0x03,
;0x4B, 0x03, 0xCF, 0x03, 0x87, 0x03, 0x87, 0x03,
;0x03, 0x03, 0x03, 0x03,
;
;/* Code: 0x58, ASCII Character: 'X' */
;0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03,
;0x86, 0x01, 0xCC, 0x00, 0x78, 0x00, 0xFC, 0x00,
;0xCE, 0x01, 0x87, 0x03, 0x03, 0x03, 0x03, 0x03,
;0x03, 0x03, 0x03, 0x03,
;
;/* Code: 0x59, ASCII Character: 'Y' */
;0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03,
;0x03, 0x03, 0x86, 0x01, 0xCC, 0x00, 0x78, 0x00,
;0x30, 0x00, 0x30, 0x00, 0x30, 0x00, 0x30, 0x00,
;0x30, 0x00, 0x30, 0x00,
;
;/* Code: 0x5A, ASCII Character: 'Z' */
;0xFF, 0x03, 0xFF, 0x03, 0x00, 0x03, 0x80, 0x01,
;0xC0, 0x00, 0x60, 0x00, 0x30, 0x00, 0x18, 0x00,
;0x0C, 0x00, 0x06, 0x00, 0x03, 0x00, 0x03, 0x00,
;0xFF, 0x03, 0xFF, 0x03,
;
;/* Code: 0x5B, ASCII Character: '[' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x5C, ASCII Character: '\' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x5D, ASCII Character: ']' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x5E, ASCII Character: '^' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x5F, ASCII Character: '_' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x60, ASCII Character: '`' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x61, ASCII Character: 'a' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x62, ASCII Character: 'b' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x63, ASCII Character: 'c' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x64, ASCII Character: 'd' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x65, ASCII Character: 'e' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x66, ASCII Character: 'f' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x67, ASCII Character: 'g' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x68, ASCII Character: 'h' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x69, ASCII Character: 'i' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x6A, ASCII Character: 'j' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x6B, ASCII Character: 'k' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x6C, ASCII Character: 'l' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x6D, ASCII Character: 'm' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x6E, ASCII Character: 'n' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x6F, ASCII Character: 'o' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x70, ASCII Character: 'p' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x71, ASCII Character: 'q' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x72, ASCII Character: 'r' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x73, ASCII Character: 's' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x74, ASCII Character: 't' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x75, ASCII Character: 'u' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x76, ASCII Character: 'v' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0xFF, 0x01, 0xFE, 0x00, 0x7C, 0x00,
;0x38, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x77, ASCII Character: 'w' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x78, ASCII Character: 'x' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x79, ASCII Character: 'y' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x7A, ASCII Character: 'z' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x7B, ASCII Character: '{' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x7C, ASCII Character: '|' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x7D, ASCII Character: '}' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x7E, ASCII Character: '~' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x7F, ASCII Character: '' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;#else
;/* Font data for displays organized as
;   rows of vertical bytes */
;
;/* Code: 0x20, ASCII Character: ' ' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x21, ASCII Character: '!' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x22, ASCII Character: '"' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x23, ASCII Character: '#' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x24, ASCII Character: '$' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x25, ASCII Character: '%' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x26, ASCII Character: '&' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x27, ASCII Character: ''' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x28, ASCII Character: '(' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x29, ASCII Character: ')' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x2A, ASCII Character: '*' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x2B, ASCII Character: '+' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x2C, ASCII Character: ',' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x2D, ASCII Character: '-' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x2E, ASCII Character: '.' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x2F, ASCII Character: '/' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x30, ASCII Character: '0' */
;0x00, 0xFC, 0xFE, 0x03, 0x03, 0x03, 0x03, 0xFE,
;0xFC, 0x00, 0x00, 0x0F, 0x1F, 0x30, 0x30, 0x30,
;0x30, 0x1F, 0x0F, 0x00,
;
;/* Code: 0x31, ASCII Character: '1' */
;0x00, 0x18, 0x0C, 0x06, 0xFF, 0xFF, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x30, 0x30, 0x30, 0x3F, 0x3F,
;0x30, 0x30, 0x30, 0x00,
;
;/* Code: 0x32, ASCII Character: '2' */
;0x00, 0x0C, 0x0E, 0x03, 0x03, 0x83, 0xC3, 0x7E,
;0x3C, 0x00, 0x00, 0x38, 0x3C, 0x36, 0x33, 0x31,
;0x30, 0x30, 0x30, 0x00,
;
;/* Code: 0x33, ASCII Character: '3' */
;0x00, 0x0C, 0x0E, 0xC3, 0xC3, 0xC3, 0xC3, 0xFE,
;0x3C, 0x00, 0x00, 0x0C, 0x1C, 0x30, 0x30, 0x30,
;0x30, 0x1F, 0x0F, 0x00,
;
;/* Code: 0x34, ASCII Character: '4' */
;0x00, 0xC0, 0xE0, 0xB0, 0x98, 0x8C, 0x86, 0xFF,
;0xFF, 0x80, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01,
;0x01, 0x3F, 0x3F, 0x01,
;
;/* Code: 0x35, ASCII Character: '5' */
;0x00, 0xFF, 0xFF, 0xC3, 0xC3, 0xC3, 0xC3, 0x83,
;0x03, 0x00, 0x00, 0x30, 0x30, 0x30, 0x30, 0x30,
;0x30, 0x1F, 0x0F, 0x00,
;
;/* Code: 0x36, ASCII Character: '6' */
;0x00, 0xFC, 0xFE, 0xC3, 0xC3, 0xC3, 0xC3, 0x8E,
;0x0C, 0x00, 0x00, 0x0F, 0x1F, 0x30, 0x30, 0x30,
;0x30, 0x1F, 0x0F, 0x00,
;
;/* Code: 0x37, ASCII Character: '7' */
;0x00, 0x03, 0x03, 0x03, 0x03, 0xC3, 0xF3, 0x3F,
;0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x3F,
;0x03, 0x00, 0x00, 0x00,
;
;/* Code: 0x38, ASCII Character: '8' */
;0x00, 0x3C, 0xFE, 0xC3, 0xC3, 0xC3, 0xC3, 0xFE,
;0x3C, 0x00, 0x00, 0x0F, 0x1F, 0x30, 0x30, 0x30,
;0x30, 0x1F, 0x0F, 0x00,
;
;/* Code: 0x39, ASCII Character: '9' */
;0x00, 0x7C, 0xFE, 0xC3, 0xC3, 0xC3, 0xC3, 0xFE,
;0xFC, 0x00, 0x00, 0x0C, 0x1C, 0x30, 0x30, 0x30,
;0x30, 0x1F, 0x0F, 0x00,
;
;/* Code: 0x3A, ASCII Character: ':' */
;0x00, 0x00, 0x00, 0x18, 0x3C, 0x3C, 0x18, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x0F, 0x0F,
;0x06, 0x00, 0x00, 0x00,
;
;/* Code: 0x3B, ASCII Character: ';' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x3C, ASCII Character: '<' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x3D, ASCII Character: '=' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x3E, ASCII Character: '>' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x3F, ASCII Character: '?' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x40, ASCII Character: '@' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x41, ASCII Character: 'A' */
;0xFC, 0xFE, 0x83, 0x83, 0x83, 0x83, 0x83, 0x83,
;0xFE, 0xFC, 0x3F, 0x3F, 0x01, 0x01, 0x01, 0x01,
;0x01, 0x01, 0x3F, 0x3F,
;
;/* Code: 0x42, ASCII Character: 'B' */
;0xFF, 0xFF, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3,
;0xFE, 0x3C, 0x3F, 0x3F, 0x30, 0x30, 0x30, 0x30,
;0x30, 0x30, 0x1F, 0x0F,
;
;/* Code: 0x43, ASCII Character: 'C' */
;0xF8, 0xFC, 0x06, 0x03, 0x03, 0x03, 0x03, 0x03,
;0x0E, 0x0C, 0x07, 0x0F, 0x18, 0x30, 0x30, 0x30,
;0x30, 0x30, 0x1C, 0x0C,
;
;/* Code: 0x44, ASCII Character: 'D' */
;0xFF, 0xFF, 0x03, 0x03, 0x03, 0x03, 0x03, 0x06,
;0xFC, 0xF8, 0x3F, 0x3F, 0x30, 0x30, 0x30, 0x30,
;0x30, 0x18, 0x0F, 0x07,
;
;/* Code: 0x45, ASCII Character: 'E' */
;0xFF, 0xFF, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3,
;0xC3, 0x03, 0x3F, 0x3F, 0x30, 0x30, 0x30, 0x30,
;0x30, 0x30, 0x30, 0x30,
;
;/* Code: 0x46, ASCII Character: 'F' */
;0xFF, 0xFF, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3,
;0x03, 0x03, 0x3F, 0x3F, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x47, ASCII Character: 'G' */
;0xF8, 0xFC, 0x06, 0x03, 0x03, 0x03, 0x83, 0x83,
;0x8E, 0x8C, 0x07, 0x0F, 0x18, 0x30, 0x30, 0x30,
;0x31, 0x31, 0x1F, 0x0F,
;
;/* Code: 0x48, ASCII Character: 'H' */
;0xFF, 0xFF, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0,
;0xFF, 0xFF, 0x3F, 0x3F, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x3F, 0x3F,
;
;/* Code: 0x49, ASCII Character: 'I' */
;0x00, 0x00, 0x03, 0x03, 0xFF, 0xFF, 0x03, 0x03,
;0x00, 0x00, 0x00, 0x00, 0x30, 0x30, 0x3F, 0x3F,
;0x30, 0x30, 0x00, 0x00,
;
;/* Code: 0x4A, ASCII Character: 'J' */
;0x00, 0x00, 0x00, 0x03, 0x03, 0xFF, 0xFF, 0x03,
;0x03, 0x00, 0x0C, 0x1C, 0x30, 0x30, 0x30, 0x1F,
;0x0F, 0x00, 0x00, 0x00,
;
;/* Code: 0x4B, ASCII Character: 'K' */
;0xFF, 0xFF, 0xC0, 0xE0, 0x30, 0x18, 0x0C, 0x06,
;0x03, 0x01, 0x3F, 0x3F, 0x00, 0x01, 0x03, 0x06,
;0x0C, 0x18, 0x30, 0x20,
;
;/* Code: 0x4C, ASCII Character: 'L' */
;0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x3F, 0x3F, 0x30, 0x30, 0x30, 0x30, 0x30,
;0x30, 0x30,
;
;/* Code: 0x4D, ASCII Character: 'M' */
;0xFF, 0xFF, 0x1C, 0x70, 0xC0, 0xC0, 0x70, 0x1C,
;0xFF, 0xFF, 0x3F, 0x3F, 0x00, 0x00, 0x01, 0x01,
;0x00, 0x00, 0x3F, 0x3F,
;
;/* Code: 0x4E, ASCII Character: 'N' */
;0xFF, 0xFF, 0x0E, 0x38, 0xE0, 0x80, 0x00, 0x00,
;0xFF, 0xFF, 0x3F, 0x3F, 0x00, 0x00, 0x00, 0x03,
;0x0E, 0x18, 0x3F, 0x3F,
;
;/* Code: 0x4F, ASCII Character: 'O' */
;0xF8, 0xFC, 0x06, 0x03, 0x03, 0x03, 0x03, 0x06,
;0xFC, 0xF8, 0x07, 0x0F, 0x18, 0x30, 0x30, 0x30,
;0x30, 0x18, 0x0F, 0x07,
;
;/* Code: 0x50, ASCII Character: 'P' */
;0xFF, 0xFF, 0x83, 0x83, 0x83, 0x83, 0x83, 0xC7,
;0xFE, 0x7C, 0x3F, 0x3F, 0x01, 0x01, 0x01, 0x01,
;0x01, 0x01, 0x00, 0x00,
;
;/* Code: 0x51, ASCII Character: 'Q' */
;0xF8, 0xFC, 0x06, 0x03, 0x03, 0x03, 0x03, 0x06,
;0xFC, 0xF8, 0x07, 0x0F, 0x18, 0x30, 0x30, 0x34,
;0x3C, 0x18, 0x3F, 0x27,
;
;/* Code: 0x52, ASCII Character: 'R' */
;0xFF, 0xFF, 0xC3, 0xC3, 0xC3, 0xC3, 0xE7, 0x7E,
;0x3C, 0x00, 0x3F, 0x3F, 0x01, 0x03, 0x07, 0x0E,
;0x1C, 0x38, 0x30, 0x20,
;
;/* Code: 0x53, ASCII Character: 'S' */
;0x3C, 0x7E, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3,
;0x8E, 0x0C, 0x0C, 0x1C, 0x30, 0x30, 0x30, 0x30,
;0x30, 0x30, 0x1F, 0x0F,
;
;/* Code: 0x54, ASCII Character: 'T' */
;0x03, 0x03, 0x03, 0x03, 0xFF, 0xFF, 0x03, 0x03,
;0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x3F,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x55, ASCII Character: 'U' */
;0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0xFF, 0xFF, 0x0F, 0x1F, 0x30, 0x30, 0x30, 0x30,
;0x30, 0x30, 0x1F, 0x0F,
;
;/* Code: 0x56, ASCII Character: 'V' */
;0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0xFF, 0xFF, 0x03, 0x07, 0x0C, 0x18, 0x30, 0x30,
;0x18, 0x0C, 0x07, 0x03,
;
;/* Code: 0x57, ASCII Character: 'W' */
;0xFF, 0xFF, 0x00, 0x80, 0xE0, 0xE0, 0x80, 0x00,
;0xFF, 0xFF, 0x3F, 0x3F, 0x0E, 0x03, 0x00, 0x00,
;0x03, 0x0E, 0x3F, 0x3F,
;
;/* Code: 0x58, ASCII Character: 'X' */
;0x0F, 0x1F, 0xB0, 0xE0, 0xC0, 0xC0, 0xE0, 0xB0,
;0x1F, 0x0F, 0x3E, 0x3F, 0x03, 0x01, 0x00, 0x00,
;0x01, 0x03, 0x3F, 0x3E,
;
;/* Code: 0x59, ASCII Character: 'Y' */
;0x1F, 0x3F, 0x60, 0xC0, 0x80, 0x80, 0xC0, 0x60,
;0x3F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x3F,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x5A, ASCII Character: 'Z' */
;0x03, 0x03, 0x03, 0x83, 0xC3, 0x63, 0x33, 0x1B,
;0x0F, 0x07, 0x3C, 0x3E, 0x33, 0x31, 0x30, 0x30,
;0x30, 0x30, 0x30, 0x30,
;
;/* Code: 0x5B, ASCII Character: '[' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x5C, ASCII Character: '\' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x5D, ASCII Character: ']' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x5E, ASCII Character: '^' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x5F, ASCII Character: '_' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x60, ASCII Character: '`' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x61, ASCII Character: 'a' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x62, ASCII Character: 'b' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x63, ASCII Character: 'c' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x64, ASCII Character: 'd' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x65, ASCII Character: 'e' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x66, ASCII Character: 'f' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x67, ASCII Character: 'g' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x68, ASCII Character: 'h' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x69, ASCII Character: 'i' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x6A, ASCII Character: 'j' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x6B, ASCII Character: 'k' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x6C, ASCII Character: 'l' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x6D, ASCII Character: 'm' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x6E, ASCII Character: 'n' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x6F, ASCII Character: 'o' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x70, ASCII Character: 'p' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x71, ASCII Character: 'q' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x72, ASCII Character: 'r' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x73, ASCII Character: 's' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x74, ASCII Character: 't' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x75, ASCII Character: 'u' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x76, ASCII Character: 'v' */
;0x20, 0x60, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0x60,
;0x20, 0x00, 0x00, 0x00, 0x01, 0x03, 0x01, 0x00,
;0x00, 0x00,
;
;/* Code: 0x77, ASCII Character: 'w' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x78, ASCII Character: 'x' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x79, ASCII Character: 'y' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x7A, ASCII Character: 'z' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x7B, ASCII Character: '{' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x7C, ASCII Character: '|' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x7D, ASCII Character: '}' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x7E, ASCII Character: '~' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x7F, ASCII Character: '' */
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00,
;
;#endif
;};
;
;#include <tiny_letter.c>
;/****************************************************************************
;Font created by the LCD Vision V1.05 font & image editor/converter
;(C) Copyright 2011-2013 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Font name: tiny_letter
;The font is proportional (has variable width).
;Font height: 5 pixels
;First character: 0x20
;Last character: 0x7F
;
;Exported font data size:
;580 bytes for displays organized as horizontal rows of bytes
;481 bytes for displays organized as rows of vertical bytes.
;****************************************************************************/
;
;flash unsigned char tiny_letter[]=
;{
;0x00, /* Proportional font */
;0x05, /* Font height */
;0x20, /* First character */
;0x60, /* Number of characters in font */
;
;/* Character widths */
;0x01, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
;0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x03,
;0x04, 0x03, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
;0x04, 0x04, 0x03, 0x04, 0x04, 0x04, 0x04, 0x04,
;0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
;0x04, 0x04, 0x04, 0x04, 0x04, 0x05, 0x04, 0x04,
;0x04, 0x04, 0x04, 0x04, 0x03, 0x04, 0x04, 0x05,
;0x05, 0x05, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
;0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
;0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
;0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
;0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04,
;
;#ifndef _GLCD_DATA_BYTEY_
;/* Font data for displays organized as
;   horizontal rows of bytes */
;
;/* Code: 0x20, ASCII Character: ' ' */
;0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x21, ASCII Character: '!' */
;0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x22, ASCII Character: '"' */
;0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x23, ASCII Character: '#' */
;0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x24, ASCII Character: '$' */
;0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x25, ASCII Character: '%' */
;0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x26, ASCII Character: '&' */
;0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x27, ASCII Character: ''' */
;0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x28, ASCII Character: '(' */
;0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x29, ASCII Character: ')' */
;0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x2A, ASCII Character: '*' */
;0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x2B, ASCII Character: '+' */
;0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x2C, ASCII Character: ',' */
;0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x2D, ASCII Character: '-' */
;0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x2E, ASCII Character: '.' */
;0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x2F, ASCII Character: '/' */
;0x04, 0x02, 0x02, 0x01, 0x01,
;
;/* Code: 0x30, ASCII Character: '0' */
;0x06, 0x09, 0x09, 0x09, 0x06,
;
;/* Code: 0x31, ASCII Character: '1' */
;0x02, 0x03, 0x02, 0x02, 0x07,
;
;/* Code: 0x32, ASCII Character: '2' */
;0x07, 0x08, 0x06, 0x01, 0x0F,
;
;/* Code: 0x33, ASCII Character: '3' */
;0x07, 0x08, 0x06, 0x08, 0x07,
;
;/* Code: 0x34, ASCII Character: '4' */
;0x04, 0x06, 0x05, 0x0F, 0x04,
;
;/* Code: 0x35, ASCII Character: '5' */
;0x0F, 0x01, 0x07, 0x08, 0x07,
;
;/* Code: 0x36, ASCII Character: '6' */
;0x06, 0x01, 0x07, 0x09, 0x06,
;
;/* Code: 0x37, ASCII Character: '7' */
;0x0F, 0x08, 0x04, 0x02, 0x02,
;
;/* Code: 0x38, ASCII Character: '8' */
;0x06, 0x09, 0x06, 0x09, 0x06,
;
;/* Code: 0x39, ASCII Character: '9' */
;0x06, 0x09, 0x0E, 0x08, 0x06,
;
;/* Code: 0x3A, ASCII Character: ':' */
;0x00, 0x02, 0x00, 0x02, 0x00,
;
;/* Code: 0x3B, ASCII Character: ';' */
;0x00, 0x04, 0x00, 0x04, 0x02,
;
;/* Code: 0x3C, ASCII Character: '<' */
;0x04, 0x02, 0x01, 0x02, 0x04,
;
;/* Code: 0x3D, ASCII Character: '=' */
;0x00, 0x0F, 0x00, 0x0F, 0x00,
;
;/* Code: 0x3E, ASCII Character: '>' */
;0x02, 0x04, 0x08, 0x04, 0x02,
;
;/* Code: 0x3F, ASCII Character: '?' */
;0x06, 0x08, 0x04, 0x00, 0x04,
;
;/* Code: 0x40, ASCII Character: '@' */
;0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x41, ASCII Character: 'A' */
;0x06, 0x09, 0x0F, 0x09, 0x09,
;
;/* Code: 0x42, ASCII Character: 'B' */
;0x07, 0x09, 0x07, 0x09, 0x07,
;
;/* Code: 0x43, ASCII Character: 'C' */
;0x06, 0x09, 0x01, 0x09, 0x06,
;
;/* Code: 0x44, ASCII Character: 'D' */
;0x07, 0x09, 0x09, 0x09, 0x07,
;
;/* Code: 0x45, ASCII Character: 'E' */
;0x0F, 0x01, 0x07, 0x01, 0x0F,
;
;/* Code: 0x46, ASCII Character: 'F' */
;0x0F, 0x01, 0x07, 0x01, 0x01,
;
;/* Code: 0x47, ASCII Character: 'G' */
;0x06, 0x09, 0x01, 0x0D, 0x06,
;
;/* Code: 0x48, ASCII Character: 'H' */
;0x09, 0x09, 0x0F, 0x09, 0x09,
;
;/* Code: 0x49, ASCII Character: 'I' */
;0x04, 0x04, 0x04, 0x04, 0x04,
;
;/* Code: 0x4A, ASCII Character: 'J' */
;0x0E, 0x04, 0x04, 0x05, 0x02,
;
;/* Code: 0x4B, ASCII Character: 'K' */
;0x09, 0x05, 0x03, 0x05, 0x09,
;
;/* Code: 0x4C, ASCII Character: 'L' */
;0x01, 0x01, 0x01, 0x01, 0x0F,
;
;/* Code: 0x4D, ASCII Character: 'M' */
;0x11, 0x1B, 0x15, 0x11, 0x11,
;
;/* Code: 0x4E, ASCII Character: 'N' */
;0x09, 0x0B, 0x0D, 0x09, 0x09,
;
;/* Code: 0x4F, ASCII Character: 'O' */
;0x06, 0x09, 0x09, 0x09, 0x06,
;
;/* Code: 0x50, ASCII Character: 'P' */
;0x07, 0x09, 0x07, 0x01, 0x01,
;
;/* Code: 0x51, ASCII Character: 'Q' */
;0x06, 0x09, 0x09, 0x0D, 0x0E,
;
;/* Code: 0x52, ASCII Character: 'R' */
;0x07, 0x09, 0x07, 0x05, 0x09,
;
;/* Code: 0x53, ASCII Character: 'S' */
;0x0E, 0x01, 0x06, 0x08, 0x07,
;
;/* Code: 0x54, ASCII Character: 'T' */
;0x07, 0x02, 0x02, 0x02, 0x02,
;
;/* Code: 0x55, ASCII Character: 'U' */
;0x09, 0x09, 0x09, 0x09, 0x06,
;
;/* Code: 0x56, ASCII Character: 'V' */
;0x09, 0x09, 0x09, 0x06, 0x06,
;
;/* Code: 0x57, ASCII Character: 'W' */
;0x11, 0x11, 0x15, 0x1B, 0x11,
;
;/* Code: 0x58, ASCII Character: 'X' */
;0x11, 0x0A, 0x04, 0x0A, 0x11,
;
;/* Code: 0x59, ASCII Character: 'Y' */
;0x11, 0x0A, 0x04, 0x04, 0x04,
;
;/* Code: 0x5A, ASCII Character: 'Z' */
;0x0F, 0x08, 0x04, 0x02, 0x0F,
;
;/* Code: 0x5B, ASCII Character: '[' */
;0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x5C, ASCII Character: '\' */
;0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x5D, ASCII Character: ']' */
;0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x5E, ASCII Character: '^' */
;0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x5F, ASCII Character: '_' */
;0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x60, ASCII Character: '`' */
;0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x61, ASCII Character: 'a' */
;0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x62, ASCII Character: 'b' */
;0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x63, ASCII Character: 'c' */
;0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x64, ASCII Character: 'd' */
;0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x65, ASCII Character: 'e' */
;0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x66, ASCII Character: 'f' */
;0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x67, ASCII Character: 'g' */
;0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x68, ASCII Character: 'h' */
;0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x69, ASCII Character: 'i' */
;0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x6A, ASCII Character: 'j' */
;0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x6B, ASCII Character: 'k' */
;0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x6C, ASCII Character: 'l' */
;0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x6D, ASCII Character: 'm' */
;0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x6E, ASCII Character: 'n' */
;0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x6F, ASCII Character: 'o' */
;0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x70, ASCII Character: 'p' */
;0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x71, ASCII Character: 'q' */
;0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x72, ASCII Character: 'r' */
;0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x73, ASCII Character: 's' */
;0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x74, ASCII Character: 't' */
;0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x75, ASCII Character: 'u' */
;0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x76, ASCII Character: 'v' */
;0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x77, ASCII Character: 'w' */
;0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x78, ASCII Character: 'x' */
;0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x79, ASCII Character: 'y' */
;0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x7A, ASCII Character: 'z' */
;0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x7B, ASCII Character: '{' */
;0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x7C, ASCII Character: '|' */
;0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x7D, ASCII Character: '}' */
;0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x7E, ASCII Character: '~' */
;0x00, 0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x7F, ASCII Character: '' */
;0x00, 0x00, 0x00, 0x00, 0x00,
;
;#else
;/* Font data for displays organized as
;   rows of vertical bytes */
;
;/* Code: 0x20, ASCII Character: ' ' */
;0x00,
;
;/* Code: 0x21, ASCII Character: '!' */
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x22, ASCII Character: '"' */
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x23, ASCII Character: '#' */
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x24, ASCII Character: '$' */
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x25, ASCII Character: '%' */
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x26, ASCII Character: '&' */
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x27, ASCII Character: ''' */
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x28, ASCII Character: '(' */
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x29, ASCII Character: ')' */
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x2A, ASCII Character: '*' */
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x2B, ASCII Character: '+' */
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x2C, ASCII Character: ',' */
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x2D, ASCII Character: '-' */
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x2E, ASCII Character: '.' */
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x2F, ASCII Character: '/' */
;0x18, 0x06, 0x01,
;
;/* Code: 0x30, ASCII Character: '0' */
;0x0E, 0x11, 0x11, 0x0E,
;
;/* Code: 0x31, ASCII Character: '1' */
;0x12, 0x1F, 0x10,
;
;/* Code: 0x32, ASCII Character: '2' */
;0x19, 0x15, 0x15, 0x12,
;
;/* Code: 0x33, ASCII Character: '3' */
;0x11, 0x15, 0x15, 0x0A,
;
;/* Code: 0x34, ASCII Character: '4' */
;0x0C, 0x0A, 0x1F, 0x08,
;
;/* Code: 0x35, ASCII Character: '5' */
;0x17, 0x15, 0x15, 0x09,
;
;/* Code: 0x36, ASCII Character: '6' */
;0x0E, 0x15, 0x15, 0x08,
;
;/* Code: 0x37, ASCII Character: '7' */
;0x01, 0x19, 0x05, 0x03,
;
;/* Code: 0x38, ASCII Character: '8' */
;0x0A, 0x15, 0x15, 0x0A,
;
;/* Code: 0x39, ASCII Character: '9' */
;0x02, 0x15, 0x15, 0x0E,
;
;/* Code: 0x3A, ASCII Character: ':' */
;0x00, 0x0A, 0x00,
;
;/* Code: 0x3B, ASCII Character: ';' */
;0x00, 0x10, 0x0A, 0x00,
;
;/* Code: 0x3C, ASCII Character: '<' */
;0x04, 0x0A, 0x11, 0x00,
;
;/* Code: 0x3D, ASCII Character: '=' */
;0x0A, 0x0A, 0x0A, 0x0A,
;
;/* Code: 0x3E, ASCII Character: '>' */
;0x00, 0x11, 0x0A, 0x04,
;
;/* Code: 0x3F, ASCII Character: '?' */
;0x00, 0x01, 0x15, 0x02,
;
;/* Code: 0x40, ASCII Character: '@' */
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x41, ASCII Character: 'A' */
;0x1E, 0x05, 0x05, 0x1E,
;
;/* Code: 0x42, ASCII Character: 'B' */
;0x1F, 0x15, 0x15, 0x0A,
;
;/* Code: 0x43, ASCII Character: 'C' */
;0x0E, 0x11, 0x11, 0x0A,
;
;/* Code: 0x44, ASCII Character: 'D' */
;0x1F, 0x11, 0x11, 0x0E,
;
;/* Code: 0x45, ASCII Character: 'E' */
;0x1F, 0x15, 0x15, 0x11,
;
;/* Code: 0x46, ASCII Character: 'F' */
;0x1F, 0x05, 0x05, 0x01,
;
;/* Code: 0x47, ASCII Character: 'G' */
;0x0E, 0x11, 0x19, 0x0A,
;
;/* Code: 0x48, ASCII Character: 'H' */
;0x1F, 0x04, 0x04, 0x1F,
;
;/* Code: 0x49, ASCII Character: 'I' */
;0x00, 0x00, 0x1F, 0x00,
;
;/* Code: 0x4A, ASCII Character: 'J' */
;0x08, 0x11, 0x0F, 0x01,
;
;/* Code: 0x4B, ASCII Character: 'K' */
;0x1F, 0x04, 0x0A, 0x11,
;
;/* Code: 0x4C, ASCII Character: 'L' */
;0x1F, 0x10, 0x10, 0x10,
;
;/* Code: 0x4D, ASCII Character: 'M' */
;0x1F, 0x02, 0x04, 0x02, 0x1F,
;
;/* Code: 0x4E, ASCII Character: 'N' */
;0x1F, 0x02, 0x04, 0x1F,
;
;/* Code: 0x4F, ASCII Character: 'O' */
;0x0E, 0x11, 0x11, 0x0E,
;
;/* Code: 0x50, ASCII Character: 'P' */
;0x1F, 0x05, 0x05, 0x02,
;
;/* Code: 0x51, ASCII Character: 'Q' */
;0x0E, 0x11, 0x19, 0x1E,
;
;/* Code: 0x52, ASCII Character: 'R' */
;0x1F, 0x05, 0x0D, 0x12,
;
;/* Code: 0x53, ASCII Character: 'S' */
;0x12, 0x15, 0x15, 0x09,
;
;/* Code: 0x54, ASCII Character: 'T' */
;0x01, 0x1F, 0x01,
;
;/* Code: 0x55, ASCII Character: 'U' */
;0x0F, 0x10, 0x10, 0x0F,
;
;/* Code: 0x56, ASCII Character: 'V' */
;0x07, 0x18, 0x18, 0x07,
;
;/* Code: 0x57, ASCII Character: 'W' */
;0x1F, 0x08, 0x04, 0x08, 0x1F,
;
;/* Code: 0x58, ASCII Character: 'X' */
;0x11, 0x0A, 0x04, 0x0A, 0x11,
;
;/* Code: 0x59, ASCII Character: 'Y' */
;0x01, 0x02, 0x1C, 0x02, 0x01,
;
;/* Code: 0x5A, ASCII Character: 'Z' */
;0x11, 0x19, 0x15, 0x13,
;
;/* Code: 0x5B, ASCII Character: '[' */
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x5C, ASCII Character: '\' */
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x5D, ASCII Character: ']' */
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x5E, ASCII Character: '^' */
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x5F, ASCII Character: '_' */
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x60, ASCII Character: '`' */
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x61, ASCII Character: 'a' */
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x62, ASCII Character: 'b' */
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x63, ASCII Character: 'c' */
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x64, ASCII Character: 'd' */
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x65, ASCII Character: 'e' */
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x66, ASCII Character: 'f' */
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x67, ASCII Character: 'g' */
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x68, ASCII Character: 'h' */
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x69, ASCII Character: 'i' */
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x6A, ASCII Character: 'j' */
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x6B, ASCII Character: 'k' */
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x6C, ASCII Character: 'l' */
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x6D, ASCII Character: 'm' */
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x6E, ASCII Character: 'n' */
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x6F, ASCII Character: 'o' */
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x70, ASCII Character: 'p' */
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x71, ASCII Character: 'q' */
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x72, ASCII Character: 'r' */
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x73, ASCII Character: 's' */
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x74, ASCII Character: 't' */
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x75, ASCII Character: 'u' */
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x76, ASCII Character: 'v' */
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x77, ASCII Character: 'w' */
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x78, ASCII Character: 'x' */
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x79, ASCII Character: 'y' */
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x7A, ASCII Character: 'z' */
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x7B, ASCII Character: '{' */
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x7C, ASCII Character: '|' */
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x7D, ASCII Character: '}' */
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x7E, ASCII Character: '~' */
;0x00, 0x00, 0x00, 0x00,
;
;/* Code: 0x7F, ASCII Character: '' */
;0x00, 0x00, 0x00, 0x00,
;
;#endif
;};
;
;unsigned char buff[80];
;long dem;
;station_info data_send;
;#include <gui.c>
;void border()
; 0000 0026 {
;PCODE: $0000033F VOL: 0
;PCODE: $00000340 VOL: 0
;    glcd_clear();
;PCODE: $00000341 VOL: 0
;    glcd_rectangle(0,0,84,48);
;PCODE: $00000342 VOL: 0
;PCODE: $00000343 VOL: 0
;PCODE: $00000344 VOL: 0
;PCODE: $00000345 VOL: 0
;PCODE: $00000346 VOL: 0
;PCODE: $00000347 VOL: 0
;PCODE: $00000348 VOL: 0
;PCODE: $00000349 VOL: 0
;    glcd_setfont(tiny_letter);
;PCODE: $0000034A VOL: 0
;PCODE: $0000034B VOL: 0
;PCODE: $0000034C VOL: 0
;    glcd_outtextxy(16,3,"HEALTH CARE");
;PCODE: $0000034D VOL: 0
;PCODE: $0000034E VOL: 0
;PCODE: $0000034F VOL: 0
;PCODE: $00000350 VOL: 0
;PCODE: $00000351 VOL: 0
;PCODE: $00000352 VOL: 0
;PCODE: $00000353 VOL: 0
;    glcd_rectangle(0,0,84,11);
;PCODE: $00000354 VOL: 0
;PCODE: $00000355 VOL: 0
;PCODE: $00000356 VOL: 0
;PCODE: $00000357 VOL: 0
;PCODE: $00000358 VOL: 0
;PCODE: $00000359 VOL: 0
;PCODE: $0000035A VOL: 0
;PCODE: $0000035B VOL: 0
;    glcd_rectangle(0,37,84,48);
;PCODE: $0000035C VOL: 0
;PCODE: $0000035D VOL: 0
;PCODE: $0000035E VOL: 0
;PCODE: $0000035F VOL: 0
;PCODE: $00000360 VOL: 0
;PCODE: $00000361 VOL: 0
;PCODE: $00000362 VOL: 0
;PCODE: $00000363 VOL: 0
;    glcd_outtextxy(15,40,"THPT YEN HOA");
;PCODE: $00000364 VOL: 0
;PCODE: $00000365 VOL: 0
;PCODE: $00000366 VOL: 0
;PCODE: $00000367 VOL: 0
;PCODE: $00000368 VOL: 0
;PCODE: $00000369 VOL: 0
;PCODE: $0000036A VOL: 0
;    glcd_setfont(big_letter_10x14);
;PCODE: $0000036B VOL: 0
;PCODE: $0000036C VOL: 0
;PCODE: $0000036D VOL: 0
;    glcd_outtextxy(8,17,"ROOM:");
;PCODE: $0000036E VOL: 0
;PCODE: $0000036F VOL: 0
;PCODE: $00000370 VOL: 0
;PCODE: $00000371 VOL: 0
;PCODE: $00000372 VOL: 0
;PCODE: $00000373 VOL: 0
;PCODE: $00000374 VOL: 0
;    glcd_outtextxy(67,17,"4");
;PCODE: $00000375 VOL: 0
;PCODE: $00000376 VOL: 0
;PCODE: $00000377 VOL: 0
;PCODE: $00000378 VOL: 0
;PCODE: $00000379 VOL: 0
;PCODE: $0000037A VOL: 0
;PCODE: $0000037B VOL: 0
;}
;PCODE: $0000037C VOL: 0
;PCODE: $0000037D VOL: 0

	.DSEG
_0xA8:
	.BYTE 0x21
;void display()
;{

	.CSEG
;PCODE: $0000037E VOL: 0
;PCODE: $0000037F VOL: 0
;    glcd_clear();
;PCODE: $00000380 VOL: 0
;    glcd_rectangle(0,0,84,48);
;PCODE: $00000381 VOL: 0
;PCODE: $00000382 VOL: 0
;PCODE: $00000383 VOL: 0
;PCODE: $00000384 VOL: 0
;PCODE: $00000385 VOL: 0
;PCODE: $00000386 VOL: 0
;PCODE: $00000387 VOL: 0
;PCODE: $00000388 VOL: 0
;    glcd_setfont(tiny_letter);
;PCODE: $00000389 VOL: 0
;PCODE: $0000038A VOL: 0
;PCODE: $0000038B VOL: 0
;    glcd_outtextxy(16,3,"HEALTH CARE");
;PCODE: $0000038C VOL: 0
;PCODE: $0000038D VOL: 0
;PCODE: $0000038E VOL: 0
;PCODE: $0000038F VOL: 0
;PCODE: $00000390 VOL: 0
;PCODE: $00000391 VOL: 0
;PCODE: $00000392 VOL: 0
;    glcd_rectangle(0,0,84,11);
;PCODE: $00000393 VOL: 0
;PCODE: $00000394 VOL: 0
;PCODE: $00000395 VOL: 0
;PCODE: $00000396 VOL: 0
;PCODE: $00000397 VOL: 0
;PCODE: $00000398 VOL: 0
;PCODE: $00000399 VOL: 0
;PCODE: $0000039A VOL: 0
;    glcd_rectangle(0,37,84,48);
;PCODE: $0000039B VOL: 0
;PCODE: $0000039C VOL: 0
;PCODE: $0000039D VOL: 0
;PCODE: $0000039E VOL: 0
;PCODE: $0000039F VOL: 0
;PCODE: $000003A0 VOL: 0
;PCODE: $000003A1 VOL: 0
;PCODE: $000003A2 VOL: 0
;    glcd_outtextxy(15,40,"THPT YEN HOA");
;PCODE: $000003A3 VOL: 0
;PCODE: $000003A4 VOL: 0
;PCODE: $000003A5 VOL: 0
;PCODE: $000003A6 VOL: 0
;PCODE: $000003A7 VOL: 0
;PCODE: $000003A8 VOL: 0
;PCODE: $000003A9 VOL: 0
;    glcd_setfont(big_letter_10x14);
;PCODE: $000003AA VOL: 0
;PCODE: $000003AB VOL: 0
;PCODE: $000003AC VOL: 0
;    glcd_outtextxy(4,17,"ROBOT");
;PCODE: $000003AD VOL: 0
;PCODE: $000003AE VOL: 0
;PCODE: $000003AF VOL: 0
;PCODE: $000003B0 VOL: 0
;PCODE: $000003B1 VOL: 0
;PCODE: $000003B2 VOL: 0
;PCODE: $000003B3 VOL: 0
;    glcd_setfont(tiny_letter);
;PCODE: $000003B4 VOL: 0
;PCODE: $000003B5 VOL: 0
;PCODE: $000003B6 VOL: 0
;    glcd_outtextxy(59,30,"COME");
;PCODE: $000003B7 VOL: 0
;PCODE: $000003B8 VOL: 0
;PCODE: $000003B9 VOL: 0
;PCODE: $000003BA VOL: 0
;PCODE: $000003BB VOL: 0
;PCODE: $000003BC VOL: 0
;PCODE: $000003BD VOL: 0
;
;}
;PCODE: $000003BE VOL: 0
;PCODE: $000003BF VOL: 0

	.DSEG
_0xA9:
	.BYTE 0x24
;interrupt [TIM0_OVF] void timer0_ovf(){
; 0000 0027 interrupt [12] void timer0_ovf(){

	.CSEG
;PCODE: $000003C0 VOL: 0
;PCODE: $000003C1 VOL: 0
; 0000 0028     TCNT0 = 0x9C;
;PCODE: $000003C2 VOL: 0
;PCODE: $000003C3 VOL: 0
; 0000 0029     dem++;
;PCODE: $000003C4 VOL: 0
;PCODE: $000003C5 VOL: 0
;PCODE: $000003C6 VOL: 0
;PCODE: $000003C7 VOL: 0
; 0000 002A }
;PCODE: $000003C8 VOL: 0
;PCODE: $000003C9 VOL: 0
;PCODE: $000003CA VOL: 0
;void main(void)
; 0000 002C {
;PCODE: $000003CB VOL: 0
; 0000 002D GLCDINIT_t glcd_init_data;
; 0000 002E DDRB.4=1;
;PCODE: $000003CC VOL: 0
;	glcd_init_data -> Y+0
;PCODE: $000003CD VOL: 0
;PCODE: $000003CE VOL: 0
; 0000 002F PORTB.4=0;
;PCODE: $000003CF VOL: 0
;PCODE: $000003D0 VOL: 0
; 0000 0030 DDRA.6=1;
;PCODE: $000003D1 VOL: 0
;PCODE: $000003D2 VOL: 0
; 0000 0031 PORTA.6=1;
;PCODE: $000003D3 VOL: 0
;PCODE: $000003D4 VOL: 0
; 0000 0032 DDRD = 0b11110000;
;PCODE: $000003D5 VOL: 0
;PCODE: $000003D6 VOL: 0
; 0000 0033 PORTD = 0b11111111;
;PCODE: $000003D7 VOL: 0
;PCODE: $000003D8 VOL: 0
; 0000 0034 TCCR0=(0<<CS02) | (1<<CS01) | (0<<CS00);
;PCODE: $000003D9 VOL: 0
;PCODE: $000003DA VOL: 0
; 0000 0035 TCNT0=0x9C;
;PCODE: $000003DB VOL: 0
;PCODE: $000003DC VOL: 0
; 0000 0036 TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (1<<TOIE0);
;PCODE: $000003DD VOL: 0
;PCODE: $000003DE VOL: 0
; 0000 0037 glcd_init_data.font=font5x7;
;PCODE: $000003DF VOL: 0
;PCODE: $000003E0 VOL: 0
; 0000 0038 glcd_init_data.temp_coef=90;
;PCODE: $000003E1 VOL: 0
;PCODE: $000003E2 VOL: 0
;PCODE: $000003E3 VOL: 0
;PCODE: $000003E4 VOL: 0
; 0000 0039 glcd_init_data.bias=3;   //rom 1 3 3-4
;PCODE: $000003E5 VOL: 0
;PCODE: $000003E6 VOL: 0
;PCODE: $000003E7 VOL: 0
;PCODE: $000003E8 VOL: 0
; 0000 003A 
; 0000 003B glcd_init_data.vlcd=60;   //rom 1-58;
;PCODE: $000003E9 VOL: 0
;PCODE: $000003EA VOL: 0
;PCODE: $000003EB VOL: 0
;PCODE: $000003EC VOL: 0
; 0000 003C glcd_init(&glcd_init_data);
;PCODE: $000003ED VOL: 0
;PCODE: $000003EE VOL: 0
; 0000 003D 
; 0000 003E #asm("sei")
;PCODE: $000003EF VOL: 0
	sei
;PCODE: $000003F0 VOL: 0
; 0000 003F 
; 0000 0040 RF_Init_RX();
;PCODE: $000003F1 VOL: 0
; 0000 0041 config();
;PCODE: $000003F2 VOL: 0
; 0000 0042 RF_Config_RX_2();
;PCODE: $000003F3 VOL: 0
; 0000 0043 while (1)
;PCODE: $000003F4 VOL: 0
; 0000 0044    {
; 0000 0045     glcd_putimagef(0,0,temp,0);
;PCODE: $000003F5 VOL: 0
;PCODE: $000003F6 VOL: 0
;PCODE: $000003F7 VOL: 0
;PCODE: $000003F8 VOL: 0
;PCODE: $000003F9 VOL: 0
;PCODE: $000003FA VOL: 0
;PCODE: $000003FB VOL: 0
;PCODE: $000003FC VOL: 0
; 0000 0046 
; 0000 0047    }
;PCODE: $000003FD VOL: 0
;PCODE: $000003FE VOL: 0
; 0000 0048 
; 0000 0049 }
;PCODE: $000003FF VOL: 0
;PCODE: $00000400 VOL: 0
;PCODE: $00000401 VOL: 0
;PCODE: $00000402 VOL: 0
